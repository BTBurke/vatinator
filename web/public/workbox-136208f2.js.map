{"version":3,"file":"workbox-136208f2.js","sources":["node_modules/workbox-core/_version.js","node_modules/workbox-core/_private/logger.js","node_modules/workbox-core/models/messages/messages.js","node_modules/workbox-core/models/messages/messageGenerator.js","node_modules/workbox-core/_private/WorkboxError.js","node_modules/workbox-core/_private/assert.js","node_modules/workbox-routing/_version.js","node_modules/workbox-routing/utils/constants.js","node_modules/workbox-routing/utils/normalizeHandler.js","node_modules/workbox-routing/Route.js","node_modules/workbox-routing/RegExpRoute.js","node_modules/workbox-core/_private/getFriendlyURL.js","node_modules/workbox-routing/Router.js","node_modules/workbox-routing/utils/getOrCreateDefaultRouter.js","node_modules/workbox-routing/registerRoute.js","node_modules/workbox-core/_private/cacheNames.js","node_modules/workbox-core/_private/dontWaitFor.js","node_modules/workbox-core/models/quotaErrorCallbacks.js","node_modules/workbox-core/registerQuotaErrorCallback.js","node_modules/workbox-core/_private/DBWrapper.js","node_modules/workbox-core/_private/deleteDatabase.js","node_modules/workbox-expiration/_version.js","node_modules/workbox-expiration/models/CacheTimestampsModel.js","node_modules/workbox-expiration/CacheExpiration.js","node_modules/workbox-expiration/ExpirationPlugin.js","node_modules/workbox-core/_private/executeQuotaErrorCallbacks.js","node_modules/workbox-core/utils/pluginUtils.js","node_modules/workbox-core/_private/cacheWrapper.js","node_modules/workbox-core/_private/fetchWrapper.js","node_modules/workbox-strategies/_version.js","node_modules/workbox-strategies/utils/messages.js","node_modules/workbox-strategies/plugins/cacheOkAndOpaquePlugin.js","node_modules/workbox-strategies/NetworkFirst.js","node_modules/workbox-strategies/CacheFirst.js","node_modules/workbox-strategies/StaleWhileRevalidate.js","node_modules/workbox-core/skipWaiting.js","node_modules/workbox-core/clientsClaim.js"],"sourcesContent":["\"use strict\";\n// @ts-ignore\ntry {\n    self['workbox:core:5.1.4'] && _();\n}\ncatch (e) { }\n","/*\n  Copyright 2019 Google LLC\n  Use of this source code is governed by an MIT-style\n  license that can be found in the LICENSE file or at\n  https://opensource.org/licenses/MIT.\n*/\nimport '../_version.js';\nconst logger = (process.env.NODE_ENV === 'production' ? null : (() => {\n    // Don't overwrite this value if it's already set.\n    // See https://github.com/GoogleChrome/workbox/pull/2284#issuecomment-560470923\n    if (!('__WB_DISABLE_DEV_LOGS' in self)) {\n        self.__WB_DISABLE_DEV_LOGS = false;\n    }\n    let inGroup = false;\n    const methodToColorMap = {\n        debug: `#7f8c8d`,\n        log: `#2ecc71`,\n        warn: `#f39c12`,\n        error: `#c0392b`,\n        groupCollapsed: `#3498db`,\n        groupEnd: null,\n    };\n    const print = function (method, args) {\n        if (self.__WB_DISABLE_DEV_LOGS) {\n            return;\n        }\n        if (method === 'groupCollapsed') {\n            // Safari doesn't print all console.groupCollapsed() arguments:\n            // https://bugs.webkit.org/show_bug.cgi?id=182754\n            if (/^((?!chrome|android).)*safari/i.test(navigator.userAgent)) {\n                console[method](...args);\n                return;\n            }\n        }\n        const styles = [\n            `background: ${methodToColorMap[method]}`,\n            `border-radius: 0.5em`,\n            `color: white`,\n            `font-weight: bold`,\n            `padding: 2px 0.5em`,\n        ];\n        // When in a group, the workbox prefix is not displayed.\n        const logPrefix = inGroup ? [] : ['%cworkbox', styles.join(';')];\n        console[method](...logPrefix, ...args);\n        if (method === 'groupCollapsed') {\n            inGroup = true;\n        }\n        if (method === 'groupEnd') {\n            inGroup = false;\n        }\n    };\n    const api = {};\n    const loggerMethods = Object.keys(methodToColorMap);\n    for (const key of loggerMethods) {\n        const method = key;\n        api[method] = (...args) => {\n            print(method, args);\n        };\n    }\n    return api;\n})());\nexport { logger };\n","/*\n  Copyright 2018 Google LLC\n\n  Use of this source code is governed by an MIT-style\n  license that can be found in the LICENSE file or at\n  https://opensource.org/licenses/MIT.\n*/\nimport '../../_version.js';\nexport const messages = {\n    'invalid-value': ({ paramName, validValueDescription, value }) => {\n        if (!paramName || !validValueDescription) {\n            throw new Error(`Unexpected input to 'invalid-value' error.`);\n        }\n        return `The '${paramName}' parameter was given a value with an ` +\n            `unexpected value. ${validValueDescription} Received a value of ` +\n            `${JSON.stringify(value)}.`;\n    },\n    'not-an-array': ({ moduleName, className, funcName, paramName }) => {\n        if (!moduleName || !className || !funcName || !paramName) {\n            throw new Error(`Unexpected input to 'not-an-array' error.`);\n        }\n        return `The parameter '${paramName}' passed into ` +\n            `'${moduleName}.${className}.${funcName}()' must be an array.`;\n    },\n    'incorrect-type': ({ expectedType, paramName, moduleName, className, funcName }) => {\n        if (!expectedType || !paramName || !moduleName || !funcName) {\n            throw new Error(`Unexpected input to 'incorrect-type' error.`);\n        }\n        return `The parameter '${paramName}' passed into ` +\n            `'${moduleName}.${className ? (className + '.') : ''}` +\n            `${funcName}()' must be of type ${expectedType}.`;\n    },\n    'incorrect-class': ({ expectedClass, paramName, moduleName, className, funcName, isReturnValueProblem }) => {\n        if (!expectedClass || !moduleName || !funcName) {\n            throw new Error(`Unexpected input to 'incorrect-class' error.`);\n        }\n        if (isReturnValueProblem) {\n            return `The return value from ` +\n                `'${moduleName}.${className ? (className + '.') : ''}${funcName}()' ` +\n                `must be an instance of class ${expectedClass.name}.`;\n        }\n        return `The parameter '${paramName}' passed into ` +\n            `'${moduleName}.${className ? (className + '.') : ''}${funcName}()' ` +\n            `must be an instance of class ${expectedClass.name}.`;\n    },\n    'missing-a-method': ({ expectedMethod, paramName, moduleName, className, funcName }) => {\n        if (!expectedMethod || !paramName || !moduleName || !className\n            || !funcName) {\n            throw new Error(`Unexpected input to 'missing-a-method' error.`);\n        }\n        return `${moduleName}.${className}.${funcName}() expected the ` +\n            `'${paramName}' parameter to expose a '${expectedMethod}' method.`;\n    },\n    'add-to-cache-list-unexpected-type': ({ entry }) => {\n        return `An unexpected entry was passed to ` +\n            `'workbox-precaching.PrecacheController.addToCacheList()' The entry ` +\n            `'${JSON.stringify(entry)}' isn't supported. You must supply an array of ` +\n            `strings with one or more characters, objects with a url property or ` +\n            `Request objects.`;\n    },\n    'add-to-cache-list-conflicting-entries': ({ firstEntry, secondEntry }) => {\n        if (!firstEntry || !secondEntry) {\n            throw new Error(`Unexpected input to ` +\n                `'add-to-cache-list-duplicate-entries' error.`);\n        }\n        return `Two of the entries passed to ` +\n            `'workbox-precaching.PrecacheController.addToCacheList()' had the URL ` +\n            `${firstEntry._entryId} but different revision details. Workbox is ` +\n            `unable to cache and version the asset correctly. Please remove one ` +\n            `of the entries.`;\n    },\n    'plugin-error-request-will-fetch': ({ thrownError }) => {\n        if (!thrownError) {\n            throw new Error(`Unexpected input to ` +\n                `'plugin-error-request-will-fetch', error.`);\n        }\n        return `An error was thrown by a plugins 'requestWillFetch()' method. ` +\n            `The thrown error message was: '${thrownError.message}'.`;\n    },\n    'invalid-cache-name': ({ cacheNameId, value }) => {\n        if (!cacheNameId) {\n            throw new Error(`Expected a 'cacheNameId' for error 'invalid-cache-name'`);\n        }\n        return `You must provide a name containing at least one character for ` +\n            `setCacheDetails({${cacheNameId}: '...'}). Received a value of ` +\n            `'${JSON.stringify(value)}'`;\n    },\n    'unregister-route-but-not-found-with-method': ({ method }) => {\n        if (!method) {\n            throw new Error(`Unexpected input to ` +\n                `'unregister-route-but-not-found-with-method' error.`);\n        }\n        return `The route you're trying to unregister was not  previously ` +\n            `registered for the method type '${method}'.`;\n    },\n    'unregister-route-route-not-registered': () => {\n        return `The route you're trying to unregister was not previously ` +\n            `registered.`;\n    },\n    'queue-replay-failed': ({ name }) => {\n        return `Replaying the background sync queue '${name}' failed.`;\n    },\n    'duplicate-queue-name': ({ name }) => {\n        return `The Queue name '${name}' is already being used. ` +\n            `All instances of backgroundSync.Queue must be given unique names.`;\n    },\n    'expired-test-without-max-age': ({ methodName, paramName }) => {\n        return `The '${methodName}()' method can only be used when the ` +\n            `'${paramName}' is used in the constructor.`;\n    },\n    'unsupported-route-type': ({ moduleName, className, funcName, paramName }) => {\n        return `The supplied '${paramName}' parameter was an unsupported type. ` +\n            `Please check the docs for ${moduleName}.${className}.${funcName} for ` +\n            `valid input types.`;\n    },\n    'not-array-of-class': ({ value, expectedClass, moduleName, className, funcName, paramName }) => {\n        return `The supplied '${paramName}' parameter must be an array of ` +\n            `'${expectedClass}' objects. Received '${JSON.stringify(value)},'. ` +\n            `Please check the call to ${moduleName}.${className}.${funcName}() ` +\n            `to fix the issue.`;\n    },\n    'max-entries-or-age-required': ({ moduleName, className, funcName }) => {\n        return `You must define either config.maxEntries or config.maxAgeSeconds` +\n            `in ${moduleName}.${className}.${funcName}`;\n    },\n    'statuses-or-headers-required': ({ moduleName, className, funcName }) => {\n        return `You must define either config.statuses or config.headers` +\n            `in ${moduleName}.${className}.${funcName}`;\n    },\n    'invalid-string': ({ moduleName, funcName, paramName }) => {\n        if (!paramName || !moduleName || !funcName) {\n            throw new Error(`Unexpected input to 'invalid-string' error.`);\n        }\n        return `When using strings, the '${paramName}' parameter must start with ` +\n            `'http' (for cross-origin matches) or '/' (for same-origin matches). ` +\n            `Please see the docs for ${moduleName}.${funcName}() for ` +\n            `more info.`;\n    },\n    'channel-name-required': () => {\n        return `You must provide a channelName to construct a ` +\n            `BroadcastCacheUpdate instance.`;\n    },\n    'invalid-responses-are-same-args': () => {\n        return `The arguments passed into responsesAreSame() appear to be ` +\n            `invalid. Please ensure valid Responses are used.`;\n    },\n    'expire-custom-caches-only': () => {\n        return `You must provide a 'cacheName' property when using the ` +\n            `expiration plugin with a runtime caching strategy.`;\n    },\n    'unit-must-be-bytes': ({ normalizedRangeHeader }) => {\n        if (!normalizedRangeHeader) {\n            throw new Error(`Unexpected input to 'unit-must-be-bytes' error.`);\n        }\n        return `The 'unit' portion of the Range header must be set to 'bytes'. ` +\n            `The Range header provided was \"${normalizedRangeHeader}\"`;\n    },\n    'single-range-only': ({ normalizedRangeHeader }) => {\n        if (!normalizedRangeHeader) {\n            throw new Error(`Unexpected input to 'single-range-only' error.`);\n        }\n        return `Multiple ranges are not supported. Please use a  single start ` +\n            `value, and optional end value. The Range header provided was ` +\n            `\"${normalizedRangeHeader}\"`;\n    },\n    'invalid-range-values': ({ normalizedRangeHeader }) => {\n        if (!normalizedRangeHeader) {\n            throw new Error(`Unexpected input to 'invalid-range-values' error.`);\n        }\n        return `The Range header is missing both start and end values. At least ` +\n            `one of those values is needed. The Range header provided was ` +\n            `\"${normalizedRangeHeader}\"`;\n    },\n    'no-range-header': () => {\n        return `No Range header was found in the Request provided.`;\n    },\n    'range-not-satisfiable': ({ size, start, end }) => {\n        return `The start (${start}) and end (${end}) values in the Range are ` +\n            `not satisfiable by the cached response, which is ${size} bytes.`;\n    },\n    'attempt-to-cache-non-get-request': ({ url, method }) => {\n        return `Unable to cache '${url}' because it is a '${method}' request and ` +\n            `only 'GET' requests can be cached.`;\n    },\n    'cache-put-with-no-response': ({ url }) => {\n        return `There was an attempt to cache '${url}' but the response was not ` +\n            `defined.`;\n    },\n    'no-response': ({ url, error }) => {\n        let message = `The strategy could not generate a response for '${url}'.`;\n        if (error) {\n            message += ` The underlying error is ${error}.`;\n        }\n        return message;\n    },\n    'bad-precaching-response': ({ url, status }) => {\n        return `The precaching request for '${url}' failed with an HTTP ` +\n            `status of ${status}.`;\n    },\n    'non-precached-url': ({ url }) => {\n        return `createHandlerBoundToURL('${url}') was called, but that URL is ` +\n            `not precached. Please pass in a URL that is precached instead.`;\n    },\n    'add-to-cache-list-conflicting-integrities': ({ url }) => {\n        return `Two of the entries passed to ` +\n            `'workbox-precaching.PrecacheController.addToCacheList()' had the URL ` +\n            `${url} with different integrity values. Please remove one of them.`;\n    },\n    'missing-precache-entry': ({ cacheName, url }) => {\n        return `Unable to find a precached response in ${cacheName} for ${url}.`;\n    },\n};\n","/*\n  Copyright 2018 Google LLC\n\n  Use of this source code is governed by an MIT-style\n  license that can be found in the LICENSE file or at\n  https://opensource.org/licenses/MIT.\n*/\nimport { messages } from './messages.js';\nimport '../../_version.js';\nconst fallback = (code, ...args) => {\n    let msg = code;\n    if (args.length > 0) {\n        msg += ` :: ${JSON.stringify(args)}`;\n    }\n    return msg;\n};\nconst generatorFunction = (code, details = {}) => {\n    const message = messages[code];\n    if (!message) {\n        throw new Error(`Unable to find message for code '${code}'.`);\n    }\n    return message(details);\n};\nexport const messageGenerator = (process.env.NODE_ENV === 'production') ?\n    fallback : generatorFunction;\n","/*\n  Copyright 2018 Google LLC\n\n  Use of this source code is governed by an MIT-style\n  license that can be found in the LICENSE file or at\n  https://opensource.org/licenses/MIT.\n*/\nimport { messageGenerator } from '../models/messages/messageGenerator.js';\nimport '../_version.js';\n/**\n * Workbox errors should be thrown with this class.\n * This allows use to ensure the type easily in tests,\n * helps developers identify errors from workbox\n * easily and allows use to optimise error\n * messages correctly.\n *\n * @private\n */\nclass WorkboxError extends Error {\n    /**\n     *\n     * @param {string} errorCode The error code that\n     * identifies this particular error.\n     * @param {Object=} details Any relevant arguments\n     * that will help developers identify issues should\n     * be added as a key on the context object.\n     */\n    constructor(errorCode, details) {\n        const message = messageGenerator(errorCode, details);\n        super(message);\n        this.name = errorCode;\n        this.details = details;\n    }\n}\nexport { WorkboxError };\n","/*\n  Copyright 2018 Google LLC\n\n  Use of this source code is governed by an MIT-style\n  license that can be found in the LICENSE file or at\n  https://opensource.org/licenses/MIT.\n*/\nimport { WorkboxError } from '../_private/WorkboxError.js';\nimport '../_version.js';\n/*\n * This method throws if the supplied value is not an array.\n * The destructed values are required to produce a meaningful error for users.\n * The destructed and restructured object is so it's clear what is\n * needed.\n */\nconst isArray = (value, details) => {\n    if (!Array.isArray(value)) {\n        throw new WorkboxError('not-an-array', details);\n    }\n};\nconst hasMethod = (object, expectedMethod, details) => {\n    const type = typeof object[expectedMethod];\n    if (type !== 'function') {\n        details['expectedMethod'] = expectedMethod;\n        throw new WorkboxError('missing-a-method', details);\n    }\n};\nconst isType = (object, expectedType, details) => {\n    if (typeof object !== expectedType) {\n        details['expectedType'] = expectedType;\n        throw new WorkboxError('incorrect-type', details);\n    }\n};\nconst isInstance = (object, expectedClass, details) => {\n    if (!(object instanceof expectedClass)) {\n        details['expectedClass'] = expectedClass;\n        throw new WorkboxError('incorrect-class', details);\n    }\n};\nconst isOneOf = (value, validValues, details) => {\n    if (!validValues.includes(value)) {\n        details['validValueDescription'] =\n            `Valid values are ${JSON.stringify(validValues)}.`;\n        throw new WorkboxError('invalid-value', details);\n    }\n};\nconst isArrayOfClass = (value, expectedClass, details) => {\n    const error = new WorkboxError('not-array-of-class', details);\n    if (!Array.isArray(value)) {\n        throw error;\n    }\n    for (const item of value) {\n        if (!(item instanceof expectedClass)) {\n            throw error;\n        }\n    }\n};\nconst finalAssertExports = process.env.NODE_ENV === 'production' ? null : {\n    hasMethod,\n    isArray,\n    isInstance,\n    isOneOf,\n    isType,\n    isArrayOfClass,\n};\nexport { finalAssertExports as assert };\n","\"use strict\";\n// @ts-ignore\ntry {\n    self['workbox:routing:5.1.4'] && _();\n}\ncatch (e) { }\n","/*\n  Copyright 2018 Google LLC\n\n  Use of this source code is governed by an MIT-style\n  license that can be found in the LICENSE file or at\n  https://opensource.org/licenses/MIT.\n*/\nimport '../_version.js';\n/**\n * The default HTTP method, 'GET', used when there's no specific method\n * configured for a route.\n *\n * @type {string}\n *\n * @private\n */\nexport const defaultMethod = 'GET';\n/**\n * The list of valid HTTP methods associated with requests that could be routed.\n *\n * @type {Array<string>}\n *\n * @private\n */\nexport const validMethods = [\n    'DELETE',\n    'GET',\n    'HEAD',\n    'PATCH',\n    'POST',\n    'PUT',\n];\n","/*\n  Copyright 2018 Google LLC\n\n  Use of this source code is governed by an MIT-style\n  license that can be found in the LICENSE file or at\n  https://opensource.org/licenses/MIT.\n*/\nimport { assert } from 'workbox-core/_private/assert.js';\nimport '../_version.js';\n/**\n * @param {function()|Object} handler Either a function, or an object with a\n * 'handle' method.\n * @return {Object} An object with a handle method.\n *\n * @private\n */\nexport const normalizeHandler = (handler) => {\n    if (handler && typeof handler === 'object') {\n        if (process.env.NODE_ENV !== 'production') {\n            assert.hasMethod(handler, 'handle', {\n                moduleName: 'workbox-routing',\n                className: 'Route',\n                funcName: 'constructor',\n                paramName: 'handler',\n            });\n        }\n        return handler;\n    }\n    else {\n        if (process.env.NODE_ENV !== 'production') {\n            assert.isType(handler, 'function', {\n                moduleName: 'workbox-routing',\n                className: 'Route',\n                funcName: 'constructor',\n                paramName: 'handler',\n            });\n        }\n        return { handle: handler };\n    }\n};\n","/*\n  Copyright 2018 Google LLC\n\n  Use of this source code is governed by an MIT-style\n  license that can be found in the LICENSE file or at\n  https://opensource.org/licenses/MIT.\n*/\nimport { assert } from 'workbox-core/_private/assert.js';\nimport { defaultMethod, validMethods } from './utils/constants.js';\nimport { normalizeHandler } from './utils/normalizeHandler.js';\nimport './_version.js';\n/**\n * A `Route` consists of a pair of callback functions, \"match\" and \"handler\".\n * The \"match\" callback determine if a route should be used to \"handle\" a\n * request by returning a non-falsy value if it can. The \"handler\" callback\n * is called when there is a match and should return a Promise that resolves\n * to a `Response`.\n *\n * @memberof module:workbox-routing\n */\nclass Route {\n    /**\n     * Constructor for Route class.\n     *\n     * @param {module:workbox-routing~matchCallback} match\n     * A callback function that determines whether the route matches a given\n     * `fetch` event by returning a non-falsy value.\n     * @param {module:workbox-routing~handlerCallback} handler A callback\n     * function that returns a Promise resolving to a Response.\n     * @param {string} [method='GET'] The HTTP method to match the Route\n     * against.\n     */\n    constructor(match, handler, method = defaultMethod) {\n        if (process.env.NODE_ENV !== 'production') {\n            assert.isType(match, 'function', {\n                moduleName: 'workbox-routing',\n                className: 'Route',\n                funcName: 'constructor',\n                paramName: 'match',\n            });\n            if (method) {\n                assert.isOneOf(method, validMethods, { paramName: 'method' });\n            }\n        }\n        // These values are referenced directly by Router so cannot be\n        // altered by minificaton.\n        this.handler = normalizeHandler(handler);\n        this.match = match;\n        this.method = method;\n    }\n}\nexport { Route };\n","/*\n  Copyright 2018 Google LLC\n\n  Use of this source code is governed by an MIT-style\n  license that can be found in the LICENSE file or at\n  https://opensource.org/licenses/MIT.\n*/\nimport { assert } from 'workbox-core/_private/assert.js';\nimport { logger } from 'workbox-core/_private/logger.js';\nimport { Route } from './Route.js';\nimport './_version.js';\n/**\n * RegExpRoute makes it easy to create a regular expression based\n * [Route]{@link module:workbox-routing.Route}.\n *\n * For same-origin requests the RegExp only needs to match part of the URL. For\n * requests against third-party servers, you must define a RegExp that matches\n * the start of the URL.\n *\n * [See the module docs for info.]{@link https://developers.google.com/web/tools/workbox/modules/workbox-routing}\n *\n * @memberof module:workbox-routing\n * @extends module:workbox-routing.Route\n */\nclass RegExpRoute extends Route {\n    /**\n     * If the regular expression contains\n     * [capture groups]{@link https://developer.mozilla.org/en-US/docs/Web/JavaScript/Reference/Global_Objects/RegExp#grouping-back-references},\n     * the captured values will be passed to the\n     * [handler's]{@link module:workbox-routing~handlerCallback} `params`\n     * argument.\n     *\n     * @param {RegExp} regExp The regular expression to match against URLs.\n     * @param {module:workbox-routing~handlerCallback} handler A callback\n     * function that returns a Promise resulting in a Response.\n     * @param {string} [method='GET'] The HTTP method to match the Route\n     * against.\n     */\n    constructor(regExp, handler, method) {\n        if (process.env.NODE_ENV !== 'production') {\n            assert.isInstance(regExp, RegExp, {\n                moduleName: 'workbox-routing',\n                className: 'RegExpRoute',\n                funcName: 'constructor',\n                paramName: 'pattern',\n            });\n        }\n        const match = ({ url }) => {\n            const result = regExp.exec(url.href);\n            // Return immediately if there's no match.\n            if (!result) {\n                return;\n            }\n            // Require that the match start at the first character in the URL string\n            // if it's a cross-origin request.\n            // See https://github.com/GoogleChrome/workbox/issues/281 for the context\n            // behind this behavior.\n            if ((url.origin !== location.origin) && (result.index !== 0)) {\n                if (process.env.NODE_ENV !== 'production') {\n                    logger.debug(`The regular expression '${regExp}' only partially matched ` +\n                        `against the cross-origin URL '${url}'. RegExpRoute's will only ` +\n                        `handle cross-origin requests if they match the entire URL.`);\n                }\n                return;\n            }\n            // If the route matches, but there aren't any capture groups defined, then\n            // this will return [], which is truthy and therefore sufficient to\n            // indicate a match.\n            // If there are capture groups, then it will return their values.\n            return result.slice(1);\n        };\n        super(match, handler, method);\n    }\n}\nexport { RegExpRoute };\n","/*\n  Copyright 2018 Google LLC\n\n  Use of this source code is governed by an MIT-style\n  license that can be found in the LICENSE file or at\n  https://opensource.org/licenses/MIT.\n*/\nimport '../_version.js';\nconst getFriendlyURL = (url) => {\n    const urlObj = new URL(String(url), location.href);\n    // See https://github.com/GoogleChrome/workbox/issues/2323\n    // We want to include everything, except for the origin if it's same-origin.\n    return urlObj.href.replace(new RegExp(`^${location.origin}`), '');\n};\nexport { getFriendlyURL };\n","/*\n  Copyright 2018 Google LLC\n\n  Use of this source code is governed by an MIT-style\n  license that can be found in the LICENSE file or at\n  https://opensource.org/licenses/MIT.\n*/\nimport { assert } from 'workbox-core/_private/assert.js';\nimport { logger } from 'workbox-core/_private/logger.js';\nimport { WorkboxError } from 'workbox-core/_private/WorkboxError.js';\nimport { getFriendlyURL } from 'workbox-core/_private/getFriendlyURL.js';\nimport { normalizeHandler } from './utils/normalizeHandler.js';\nimport './_version.js';\n/**\n * The Router can be used to process a FetchEvent through one or more\n * [Routes]{@link module:workbox-routing.Route} responding  with a Request if\n * a matching route exists.\n *\n * If no route matches a given a request, the Router will use a \"default\"\n * handler if one is defined.\n *\n * Should the matching Route throw an error, the Router will use a \"catch\"\n * handler if one is defined to gracefully deal with issues and respond with a\n * Request.\n *\n * If a request matches multiple routes, the **earliest** registered route will\n * be used to respond to the request.\n *\n * @memberof module:workbox-routing\n */\nclass Router {\n    /**\n     * Initializes a new Router.\n     */\n    constructor() {\n        this._routes = new Map();\n    }\n    /**\n     * @return {Map<string, Array<module:workbox-routing.Route>>} routes A `Map` of HTTP\n     * method name ('GET', etc.) to an array of all the corresponding `Route`\n     * instances that are registered.\n     */\n    get routes() {\n        return this._routes;\n    }\n    /**\n     * Adds a fetch event listener to respond to events when a route matches\n     * the event's request.\n     */\n    addFetchListener() {\n        // See https://github.com/Microsoft/TypeScript/issues/28357#issuecomment-436484705\n        self.addEventListener('fetch', ((event) => {\n            const { request } = event;\n            const responsePromise = this.handleRequest({ request, event });\n            if (responsePromise) {\n                event.respondWith(responsePromise);\n            }\n        }));\n    }\n    /**\n     * Adds a message event listener for URLs to cache from the window.\n     * This is useful to cache resources loaded on the page prior to when the\n     * service worker started controlling it.\n     *\n     * The format of the message data sent from the window should be as follows.\n     * Where the `urlsToCache` array may consist of URL strings or an array of\n     * URL string + `requestInit` object (the same as you'd pass to `fetch()`).\n     *\n     * ```\n     * {\n     *   type: 'CACHE_URLS',\n     *   payload: {\n     *     urlsToCache: [\n     *       './script1.js',\n     *       './script2.js',\n     *       ['./script3.js', {mode: 'no-cors'}],\n     *     ],\n     *   },\n     * }\n     * ```\n     */\n    addCacheListener() {\n        // See https://github.com/Microsoft/TypeScript/issues/28357#issuecomment-436484705\n        self.addEventListener('message', ((event) => {\n            if (event.data && event.data.type === 'CACHE_URLS') {\n                const { payload } = event.data;\n                if (process.env.NODE_ENV !== 'production') {\n                    logger.debug(`Caching URLs from the window`, payload.urlsToCache);\n                }\n                const requestPromises = Promise.all(payload.urlsToCache.map((entry) => {\n                    if (typeof entry === 'string') {\n                        entry = [entry];\n                    }\n                    const request = new Request(...entry);\n                    return this.handleRequest({ request });\n                    // TODO(philipwalton): TypeScript errors without this typecast for\n                    // some reason (probably a bug). The real type here should work but\n                    // doesn't: `Array<Promise<Response> | undefined>`.\n                })); // TypeScript\n                event.waitUntil(requestPromises);\n                // If a MessageChannel was used, reply to the message on success.\n                if (event.ports && event.ports[0]) {\n                    requestPromises.then(() => event.ports[0].postMessage(true));\n                }\n            }\n        }));\n    }\n    /**\n     * Apply the routing rules to a FetchEvent object to get a Response from an\n     * appropriate Route's handler.\n     *\n     * @param {Object} options\n     * @param {Request} options.request The request to handle (this is usually\n     *     from a fetch event, but it does not have to be).\n     * @param {FetchEvent} [options.event] The event that triggered the request,\n     *     if applicable.\n     * @return {Promise<Response>|undefined} A promise is returned if a\n     *     registered route can handle the request. If there is no matching\n     *     route and there's no `defaultHandler`, `undefined` is returned.\n     */\n    handleRequest({ request, event }) {\n        if (process.env.NODE_ENV !== 'production') {\n            assert.isInstance(request, Request, {\n                moduleName: 'workbox-routing',\n                className: 'Router',\n                funcName: 'handleRequest',\n                paramName: 'options.request',\n            });\n        }\n        const url = new URL(request.url, location.href);\n        if (!url.protocol.startsWith('http')) {\n            if (process.env.NODE_ENV !== 'production') {\n                logger.debug(`Workbox Router only supports URLs that start with 'http'.`);\n            }\n            return;\n        }\n        const { params, route } = this.findMatchingRoute({ url, request, event });\n        let handler = route && route.handler;\n        const debugMessages = [];\n        if (process.env.NODE_ENV !== 'production') {\n            if (handler) {\n                debugMessages.push([\n                    `Found a route to handle this request:`, route,\n                ]);\n                if (params) {\n                    debugMessages.push([\n                        `Passing the following params to the route's handler:`, params,\n                    ]);\n                }\n            }\n        }\n        // If we don't have a handler because there was no matching route, then\n        // fall back to defaultHandler if that's defined.\n        if (!handler && this._defaultHandler) {\n            if (process.env.NODE_ENV !== 'production') {\n                debugMessages.push(`Failed to find a matching route. Falling ` +\n                    `back to the default handler.`);\n            }\n            handler = this._defaultHandler;\n        }\n        if (!handler) {\n            if (process.env.NODE_ENV !== 'production') {\n                // No handler so Workbox will do nothing. If logs is set of debug\n                // i.e. verbose, we should print out this information.\n                logger.debug(`No route found for: ${getFriendlyURL(url)}`);\n            }\n            return;\n        }\n        if (process.env.NODE_ENV !== 'production') {\n            // We have a handler, meaning Workbox is going to handle the route.\n            // print the routing details to the console.\n            logger.groupCollapsed(`Router is responding to: ${getFriendlyURL(url)}`);\n            debugMessages.forEach((msg) => {\n                if (Array.isArray(msg)) {\n                    logger.log(...msg);\n                }\n                else {\n                    logger.log(msg);\n                }\n            });\n            logger.groupEnd();\n        }\n        // Wrap in try and catch in case the handle method throws a synchronous\n        // error. It should still callback to the catch handler.\n        let responsePromise;\n        try {\n            responsePromise = handler.handle({ url, request, event, params });\n        }\n        catch (err) {\n            responsePromise = Promise.reject(err);\n        }\n        if (responsePromise instanceof Promise && this._catchHandler) {\n            responsePromise = responsePromise.catch((err) => {\n                if (process.env.NODE_ENV !== 'production') {\n                    // Still include URL here as it will be async from the console group\n                    // and may not make sense without the URL\n                    logger.groupCollapsed(`Error thrown when responding to: ` +\n                        ` ${getFriendlyURL(url)}. Falling back to Catch Handler.`);\n                    logger.error(`Error thrown by:`, route);\n                    logger.error(err);\n                    logger.groupEnd();\n                }\n                return this._catchHandler.handle({ url, request, event });\n            });\n        }\n        return responsePromise;\n    }\n    /**\n     * Checks a request and URL (and optionally an event) against the list of\n     * registered routes, and if there's a match, returns the corresponding\n     * route along with any params generated by the match.\n     *\n     * @param {Object} options\n     * @param {URL} options.url\n     * @param {Request} options.request The request to match.\n     * @param {Event} [options.event] The corresponding event (unless N/A).\n     * @return {Object} An object with `route` and `params` properties.\n     *     They are populated if a matching route was found or `undefined`\n     *     otherwise.\n     */\n    findMatchingRoute({ url, request, event }) {\n        if (process.env.NODE_ENV !== 'production') {\n            assert.isInstance(url, URL, {\n                moduleName: 'workbox-routing',\n                className: 'Router',\n                funcName: 'findMatchingRoute',\n                paramName: 'options.url',\n            });\n            assert.isInstance(request, Request, {\n                moduleName: 'workbox-routing',\n                className: 'Router',\n                funcName: 'findMatchingRoute',\n                paramName: 'options.request',\n            });\n        }\n        const routes = this._routes.get(request.method) || [];\n        for (const route of routes) {\n            let params;\n            const matchResult = route.match({ url, request, event });\n            if (matchResult) {\n                // See https://github.com/GoogleChrome/workbox/issues/2079\n                params = matchResult;\n                if (Array.isArray(matchResult) && matchResult.length === 0) {\n                    // Instead of passing an empty array in as params, use undefined.\n                    params = undefined;\n                }\n                else if ((matchResult.constructor === Object &&\n                    Object.keys(matchResult).length === 0)) {\n                    // Instead of passing an empty object in as params, use undefined.\n                    params = undefined;\n                }\n                else if (typeof matchResult === 'boolean') {\n                    // For the boolean value true (rather than just something truth-y),\n                    // don't set params.\n                    // See https://github.com/GoogleChrome/workbox/pull/2134#issuecomment-513924353\n                    params = undefined;\n                }\n                // Return early if have a match.\n                return { route, params };\n            }\n        }\n        // If no match was found above, return and empty object.\n        return {};\n    }\n    /**\n     * Define a default `handler` that's called when no routes explicitly\n     * match the incoming request.\n     *\n     * Without a default handler, unmatched requests will go against the\n     * network as if there were no service worker present.\n     *\n     * @param {module:workbox-routing~handlerCallback} handler A callback\n     * function that returns a Promise resulting in a Response.\n     */\n    setDefaultHandler(handler) {\n        this._defaultHandler = normalizeHandler(handler);\n    }\n    /**\n     * If a Route throws an error while handling a request, this `handler`\n     * will be called and given a chance to provide a response.\n     *\n     * @param {module:workbox-routing~handlerCallback} handler A callback\n     * function that returns a Promise resulting in a Response.\n     */\n    setCatchHandler(handler) {\n        this._catchHandler = normalizeHandler(handler);\n    }\n    /**\n     * Registers a route with the router.\n     *\n     * @param {module:workbox-routing.Route} route The route to register.\n     */\n    registerRoute(route) {\n        if (process.env.NODE_ENV !== 'production') {\n            assert.isType(route, 'object', {\n                moduleName: 'workbox-routing',\n                className: 'Router',\n                funcName: 'registerRoute',\n                paramName: 'route',\n            });\n            assert.hasMethod(route, 'match', {\n                moduleName: 'workbox-routing',\n                className: 'Router',\n                funcName: 'registerRoute',\n                paramName: 'route',\n            });\n            assert.isType(route.handler, 'object', {\n                moduleName: 'workbox-routing',\n                className: 'Router',\n                funcName: 'registerRoute',\n                paramName: 'route',\n            });\n            assert.hasMethod(route.handler, 'handle', {\n                moduleName: 'workbox-routing',\n                className: 'Router',\n                funcName: 'registerRoute',\n                paramName: 'route.handler',\n            });\n            assert.isType(route.method, 'string', {\n                moduleName: 'workbox-routing',\n                className: 'Router',\n                funcName: 'registerRoute',\n                paramName: 'route.method',\n            });\n        }\n        if (!this._routes.has(route.method)) {\n            this._routes.set(route.method, []);\n        }\n        // Give precedence to all of the earlier routes by adding this additional\n        // route to the end of the array.\n        this._routes.get(route.method).push(route);\n    }\n    /**\n     * Unregisters a route with the router.\n     *\n     * @param {module:workbox-routing.Route} route The route to unregister.\n     */\n    unregisterRoute(route) {\n        if (!this._routes.has(route.method)) {\n            throw new WorkboxError('unregister-route-but-not-found-with-method', {\n                method: route.method,\n            });\n        }\n        const routeIndex = this._routes.get(route.method).indexOf(route);\n        if (routeIndex > -1) {\n            this._routes.get(route.method).splice(routeIndex, 1);\n        }\n        else {\n            throw new WorkboxError('unregister-route-route-not-registered');\n        }\n    }\n}\nexport { Router };\n","/*\n  Copyright 2019 Google LLC\n\n  Use of this source code is governed by an MIT-style\n  license that can be found in the LICENSE file or at\n  https://opensource.org/licenses/MIT.\n*/\nimport { Router } from '../Router.js';\nimport '../_version.js';\nlet defaultRouter;\n/**\n * Creates a new, singleton Router instance if one does not exist. If one\n * does already exist, that instance is returned.\n *\n * @private\n * @return {Router}\n */\nexport const getOrCreateDefaultRouter = () => {\n    if (!defaultRouter) {\n        defaultRouter = new Router();\n        // The helpers that use the default Router assume these listeners exist.\n        defaultRouter.addFetchListener();\n        defaultRouter.addCacheListener();\n    }\n    return defaultRouter;\n};\n","/*\n  Copyright 2019 Google LLC\n\n  Use of this source code is governed by an MIT-style\n  license that can be found in the LICENSE file or at\n  https://opensource.org/licenses/MIT.\n*/\nimport { logger } from 'workbox-core/_private/logger.js';\nimport { WorkboxError } from 'workbox-core/_private/WorkboxError.js';\nimport { Route } from './Route.js';\nimport { RegExpRoute } from './RegExpRoute.js';\nimport { getOrCreateDefaultRouter } from './utils/getOrCreateDefaultRouter.js';\nimport './_version.js';\n/**\n * Easily register a RegExp, string, or function with a caching\n * strategy to a singleton Router instance.\n *\n * This method will generate a Route for you if needed and\n * call [registerRoute()]{@link module:workbox-routing.Router#registerRoute}.\n *\n * @param {RegExp|string|module:workbox-routing.Route~matchCallback|module:workbox-routing.Route} capture\n * If the capture param is a `Route`, all other arguments will be ignored.\n * @param {module:workbox-routing~handlerCallback} [handler] A callback\n * function that returns a Promise resulting in a Response. This parameter\n * is required if `capture` is not a `Route` object.\n * @param {string} [method='GET'] The HTTP method to match the Route\n * against.\n * @return {module:workbox-routing.Route} The generated `Route`(Useful for\n * unregistering).\n *\n * @memberof module:workbox-routing\n */\nfunction registerRoute(capture, handler, method) {\n    let route;\n    if (typeof capture === 'string') {\n        const captureUrl = new URL(capture, location.href);\n        if (process.env.NODE_ENV !== 'production') {\n            if (!(capture.startsWith('/') || capture.startsWith('http'))) {\n                throw new WorkboxError('invalid-string', {\n                    moduleName: 'workbox-routing',\n                    funcName: 'registerRoute',\n                    paramName: 'capture',\n                });\n            }\n            // We want to check if Express-style wildcards are in the pathname only.\n            // TODO: Remove this log message in v4.\n            const valueToCheck = capture.startsWith('http') ?\n                captureUrl.pathname : capture;\n            // See https://github.com/pillarjs/path-to-regexp#parameters\n            const wildcards = '[*:?+]';\n            if ((new RegExp(`${wildcards}`)).exec(valueToCheck)) {\n                logger.debug(`The '$capture' parameter contains an Express-style wildcard ` +\n                    `character (${wildcards}). Strings are now always interpreted as ` +\n                    `exact matches; use a RegExp for partial or wildcard matches.`);\n            }\n        }\n        const matchCallback = ({ url }) => {\n            if (process.env.NODE_ENV !== 'production') {\n                if ((url.pathname === captureUrl.pathname) &&\n                    (url.origin !== captureUrl.origin)) {\n                    logger.debug(`${capture} only partially matches the cross-origin URL ` +\n                        `${url}. This route will only handle cross-origin requests ` +\n                        `if they match the entire URL.`);\n                }\n            }\n            return url.href === captureUrl.href;\n        };\n        // If `capture` is a string then `handler` and `method` must be present.\n        route = new Route(matchCallback, handler, method);\n    }\n    else if (capture instanceof RegExp) {\n        // If `capture` is a `RegExp` then `handler` and `method` must be present.\n        route = new RegExpRoute(capture, handler, method);\n    }\n    else if (typeof capture === 'function') {\n        // If `capture` is a function then `handler` and `method` must be present.\n        route = new Route(capture, handler, method);\n    }\n    else if (capture instanceof Route) {\n        route = capture;\n    }\n    else {\n        throw new WorkboxError('unsupported-route-type', {\n            moduleName: 'workbox-routing',\n            funcName: 'registerRoute',\n            paramName: 'capture',\n        });\n    }\n    const defaultRouter = getOrCreateDefaultRouter();\n    defaultRouter.registerRoute(route);\n    return route;\n}\nexport { registerRoute };\n","/*\n  Copyright 2018 Google LLC\n\n  Use of this source code is governed by an MIT-style\n  license that can be found in the LICENSE file or at\n  https://opensource.org/licenses/MIT.\n*/\nimport '../_version.js';\nconst _cacheNameDetails = {\n    googleAnalytics: 'googleAnalytics',\n    precache: 'precache-v2',\n    prefix: 'workbox',\n    runtime: 'runtime',\n    suffix: typeof registration !== 'undefined' ? registration.scope : '',\n};\nconst _createCacheName = (cacheName) => {\n    return [_cacheNameDetails.prefix, cacheName, _cacheNameDetails.suffix]\n        .filter((value) => value && value.length > 0)\n        .join('-');\n};\nconst eachCacheNameDetail = (fn) => {\n    for (const key of Object.keys(_cacheNameDetails)) {\n        fn(key);\n    }\n};\nexport const cacheNames = {\n    updateDetails: (details) => {\n        eachCacheNameDetail((key) => {\n            if (typeof details[key] === 'string') {\n                _cacheNameDetails[key] = details[key];\n            }\n        });\n    },\n    getGoogleAnalyticsName: (userCacheName) => {\n        return userCacheName || _createCacheName(_cacheNameDetails.googleAnalytics);\n    },\n    getPrecacheName: (userCacheName) => {\n        return userCacheName || _createCacheName(_cacheNameDetails.precache);\n    },\n    getPrefix: () => {\n        return _cacheNameDetails.prefix;\n    },\n    getRuntimeName: (userCacheName) => {\n        return userCacheName || _createCacheName(_cacheNameDetails.runtime);\n    },\n    getSuffix: () => {\n        return _cacheNameDetails.suffix;\n    },\n};\n","/*\n  Copyright 2019 Google LLC\n  Use of this source code is governed by an MIT-style\n  license that can be found in the LICENSE file or at\n  https://opensource.org/licenses/MIT.\n*/\nimport '../_version.js';\n/**\n * A helper function that prevents a promise from being flagged as unused.\n *\n * @private\n **/\nexport function dontWaitFor(promise) {\n    // Effective no-op.\n    promise.then(() => { });\n}\n","/*\n  Copyright 2018 Google LLC\n\n  Use of this source code is governed by an MIT-style\n  license that can be found in the LICENSE file or at\n  https://opensource.org/licenses/MIT.\n*/\nimport '../_version.js';\n// Callbacks to be executed whenever there's a quota error.\nconst quotaErrorCallbacks = new Set();\nexport { quotaErrorCallbacks };\n","/*\n  Copyright 2019 Google LLC\n\n  Use of this source code is governed by an MIT-style\n  license that can be found in the LICENSE file or at\n  https://opensource.org/licenses/MIT.\n*/\nimport { logger } from './_private/logger.js';\nimport { assert } from './_private/assert.js';\nimport { quotaErrorCallbacks } from './models/quotaErrorCallbacks.js';\nimport './_version.js';\n/**\n * Adds a function to the set of quotaErrorCallbacks that will be executed if\n * there's a quota error.\n *\n * @param {Function} callback\n * @memberof module:workbox-core\n */\nfunction registerQuotaErrorCallback(callback) {\n    if (process.env.NODE_ENV !== 'production') {\n        assert.isType(callback, 'function', {\n            moduleName: 'workbox-core',\n            funcName: 'register',\n            paramName: 'callback',\n        });\n    }\n    quotaErrorCallbacks.add(callback);\n    if (process.env.NODE_ENV !== 'production') {\n        logger.log('Registered a callback to respond to quota errors.', callback);\n    }\n}\nexport { registerQuotaErrorCallback };\n","/*\n  Copyright 2018 Google LLC\n\n  Use of this source code is governed by an MIT-style\n  license that can be found in the LICENSE file or at\n  https://opensource.org/licenses/MIT.\n*/\nimport '../_version.js';\n/**\n * A class that wraps common IndexedDB functionality in a promise-based API.\n * It exposes all the underlying power and functionality of IndexedDB, but\n * wraps the most commonly used features in a way that's much simpler to use.\n *\n * @private\n */\nexport class DBWrapper {\n    /**\n     * @param {string} name\n     * @param {number} version\n     * @param {Object=} [callback]\n     * @param {!Function} [callbacks.onupgradeneeded]\n     * @param {!Function} [callbacks.onversionchange] Defaults to\n     *     DBWrapper.prototype._onversionchange when not specified.\n     * @private\n     */\n    constructor(name, version, { onupgradeneeded, onversionchange, } = {}) {\n        this._db = null;\n        this._name = name;\n        this._version = version;\n        this._onupgradeneeded = onupgradeneeded;\n        this._onversionchange = onversionchange || (() => this.close());\n    }\n    /**\n     * Returns the IDBDatabase instance (not normally needed).\n     * @return {IDBDatabase|undefined}\n     *\n     * @private\n     */\n    get db() {\n        return this._db;\n    }\n    /**\n     * Opens a connected to an IDBDatabase, invokes any onupgradedneeded\n     * callback, and added an onversionchange callback to the database.\n     *\n     * @return {IDBDatabase}\n     * @private\n     */\n    async open() {\n        if (this._db)\n            return;\n        this._db = await new Promise((resolve, reject) => {\n            // This flag is flipped to true if the timeout callback runs prior\n            // to the request failing or succeeding. Note: we use a timeout instead\n            // of an onblocked handler since there are cases where onblocked will\n            // never never run. A timeout better handles all possible scenarios:\n            // https://github.com/w3c/IndexedDB/issues/223\n            let openRequestTimedOut = false;\n            setTimeout(() => {\n                openRequestTimedOut = true;\n                reject(new Error('The open request was blocked and timed out'));\n            }, this.OPEN_TIMEOUT);\n            const openRequest = indexedDB.open(this._name, this._version);\n            openRequest.onerror = () => reject(openRequest.error);\n            openRequest.onupgradeneeded = (evt) => {\n                if (openRequestTimedOut) {\n                    openRequest.transaction.abort();\n                    openRequest.result.close();\n                }\n                else if (typeof this._onupgradeneeded === 'function') {\n                    this._onupgradeneeded(evt);\n                }\n            };\n            openRequest.onsuccess = () => {\n                const db = openRequest.result;\n                if (openRequestTimedOut) {\n                    db.close();\n                }\n                else {\n                    db.onversionchange = this._onversionchange.bind(this);\n                    resolve(db);\n                }\n            };\n        });\n        return this;\n    }\n    /**\n     * Polyfills the native `getKey()` method. Note, this is overridden at\n     * runtime if the browser supports the native method.\n     *\n     * @param {string} storeName\n     * @param {*} query\n     * @return {Array}\n     * @private\n     */\n    async getKey(storeName, query) {\n        return (await this.getAllKeys(storeName, query, 1))[0];\n    }\n    /**\n     * Polyfills the native `getAll()` method. Note, this is overridden at\n     * runtime if the browser supports the native method.\n     *\n     * @param {string} storeName\n     * @param {*} query\n     * @param {number} count\n     * @return {Array}\n     * @private\n     */\n    async getAll(storeName, query, count) {\n        return await this.getAllMatching(storeName, { query, count });\n    }\n    /**\n     * Polyfills the native `getAllKeys()` method. Note, this is overridden at\n     * runtime if the browser supports the native method.\n     *\n     * @param {string} storeName\n     * @param {*} query\n     * @param {number} count\n     * @return {Array}\n     * @private\n     */\n    async getAllKeys(storeName, query, count) {\n        const entries = await this.getAllMatching(storeName, { query, count, includeKeys: true });\n        return entries.map((entry) => entry.key);\n    }\n    /**\n     * Supports flexible lookup in an object store by specifying an index,\n     * query, direction, and count. This method returns an array of objects\n     * with the signature .\n     *\n     * @param {string} storeName\n     * @param {Object} [opts]\n     * @param {string} [opts.index] The index to use (if specified).\n     * @param {*} [opts.query]\n     * @param {IDBCursorDirection} [opts.direction]\n     * @param {number} [opts.count] The max number of results to return.\n     * @param {boolean} [opts.includeKeys] When true, the structure of the\n     *     returned objects is changed from an array of values to an array of\n     *     objects in the form {key, primaryKey, value}.\n     * @return {Array}\n     * @private\n     */\n    async getAllMatching(storeName, { index, query = null, // IE/Edge errors if query === `undefined`.\n    direction = 'next', count, includeKeys = false, } = {}) {\n        return await this.transaction([storeName], 'readonly', (txn, done) => {\n            const store = txn.objectStore(storeName);\n            const target = index ? store.index(index) : store;\n            const results = [];\n            const request = target.openCursor(query, direction);\n            request.onsuccess = () => {\n                const cursor = request.result;\n                if (cursor) {\n                    results.push(includeKeys ? cursor : cursor.value);\n                    if (count && results.length >= count) {\n                        done(results);\n                    }\n                    else {\n                        cursor.continue();\n                    }\n                }\n                else {\n                    done(results);\n                }\n            };\n        });\n    }\n    /**\n     * Accepts a list of stores, a transaction type, and a callback and\n     * performs a transaction. A promise is returned that resolves to whatever\n     * value the callback chooses. The callback holds all the transaction logic\n     * and is invoked with two arguments:\n     *   1. The IDBTransaction object\n     *   2. A `done` function, that's used to resolve the promise when\n     *      when the transaction is done, if passed a value, the promise is\n     *      resolved to that value.\n     *\n     * @param {Array<string>} storeNames An array of object store names\n     *     involved in the transaction.\n     * @param {string} type Can be `readonly` or `readwrite`.\n     * @param {!Function} callback\n     * @return {*} The result of the transaction ran by the callback.\n     * @private\n     */\n    async transaction(storeNames, type, callback) {\n        await this.open();\n        return await new Promise((resolve, reject) => {\n            const txn = this._db.transaction(storeNames, type);\n            txn.onabort = () => reject(txn.error);\n            txn.oncomplete = () => resolve();\n            callback(txn, (value) => resolve(value));\n        });\n    }\n    /**\n     * Delegates async to a native IDBObjectStore method.\n     *\n     * @param {string} method The method name.\n     * @param {string} storeName The object store name.\n     * @param {string} type Can be `readonly` or `readwrite`.\n     * @param {...*} args The list of args to pass to the native method.\n     * @return {*} The result of the transaction.\n     * @private\n     */\n    async _call(method, storeName, type, ...args) {\n        const callback = (txn, done) => {\n            const objStore = txn.objectStore(storeName);\n            // TODO(philipwalton): Fix this underlying TS2684 error.\n            // @ts-ignore\n            const request = objStore[method].apply(objStore, args);\n            request.onsuccess = () => done(request.result);\n        };\n        return await this.transaction([storeName], type, callback);\n    }\n    /**\n     * Closes the connection opened by `DBWrapper.open()`. Generally this method\n     * doesn't need to be called since:\n     *   1. It's usually better to keep a connection open since opening\n     *      a new connection is somewhat slow.\n     *   2. Connections are automatically closed when the reference is\n     *      garbage collected.\n     * The primary use case for needing to close a connection is when another\n     * reference (typically in another tab) needs to upgrade it and would be\n     * blocked by the current, open connection.\n     *\n     * @private\n     */\n    close() {\n        if (this._db) {\n            this._db.close();\n            this._db = null;\n        }\n    }\n}\n// Exposed on the prototype to let users modify the default timeout on a\n// per-instance or global basis.\nDBWrapper.prototype.OPEN_TIMEOUT = 2000;\n// Wrap native IDBObjectStore methods according to their mode.\nconst methodsToWrap = {\n    readonly: ['get', 'count', 'getKey', 'getAll', 'getAllKeys'],\n    readwrite: ['add', 'put', 'clear', 'delete'],\n};\nfor (const [mode, methods] of Object.entries(methodsToWrap)) {\n    for (const method of methods) {\n        if (method in IDBObjectStore.prototype) {\n            // Don't use arrow functions here since we're outside of the class.\n            DBWrapper.prototype[method] =\n                async function (storeName, ...args) {\n                    return await this._call(method, storeName, mode, ...args);\n                };\n        }\n    }\n}\n","/*\n  Copyright 2018 Google LLC\n\n  Use of this source code is governed by an MIT-style\n  license that can be found in the LICENSE file or at\n  https://opensource.org/licenses/MIT.\n*/\nimport '../_version.js';\n/**\n * Deletes the database.\n * Note: this is exported separately from the DBWrapper module because most\n * usages of IndexedDB in workbox dont need deleting, and this way it can be\n * reused in tests to delete databases without creating DBWrapper instances.\n *\n * @param {string} name The database name.\n * @private\n */\nexport const deleteDatabase = async (name) => {\n    await new Promise((resolve, reject) => {\n        const request = indexedDB.deleteDatabase(name);\n        request.onerror = () => {\n            reject(request.error);\n        };\n        request.onblocked = () => {\n            reject(new Error('Delete blocked'));\n        };\n        request.onsuccess = () => {\n            resolve();\n        };\n    });\n};\n","\"use strict\";\n// @ts-ignore\ntry {\n    self['workbox:expiration:5.1.4'] && _();\n}\ncatch (e) { }\n","/*\n  Copyright 2018 Google LLC\n\n  Use of this source code is governed by an MIT-style\n  license that can be found in the LICENSE file or at\n  https://opensource.org/licenses/MIT.\n*/\nimport { DBWrapper } from 'workbox-core/_private/DBWrapper.js';\nimport { deleteDatabase } from 'workbox-core/_private/deleteDatabase.js';\nimport '../_version.js';\nconst DB_NAME = 'workbox-expiration';\nconst OBJECT_STORE_NAME = 'cache-entries';\nconst normalizeURL = (unNormalizedUrl) => {\n    const url = new URL(unNormalizedUrl, location.href);\n    url.hash = '';\n    return url.href;\n};\n/**\n * Returns the timestamp model.\n *\n * @private\n */\nclass CacheTimestampsModel {\n    /**\n     *\n     * @param {string} cacheName\n     *\n     * @private\n     */\n    constructor(cacheName) {\n        this._cacheName = cacheName;\n        this._db = new DBWrapper(DB_NAME, 1, {\n            onupgradeneeded: (event) => this._handleUpgrade(event),\n        });\n    }\n    /**\n     * Should perform an upgrade of indexedDB.\n     *\n     * @param {Event} event\n     *\n     * @private\n     */\n    _handleUpgrade(event) {\n        const db = event.target.result;\n        // TODO(philipwalton): EdgeHTML doesn't support arrays as a keyPath, so we\n        // have to use the `id` keyPath here and create our own values (a\n        // concatenation of `url + cacheName`) instead of simply using\n        // `keyPath: ['url', 'cacheName']`, which is supported in other browsers.\n        const objStore = db.createObjectStore(OBJECT_STORE_NAME, { keyPath: 'id' });\n        // TODO(philipwalton): once we don't have to support EdgeHTML, we can\n        // create a single index with the keyPath `['cacheName', 'timestamp']`\n        // instead of doing both these indexes.\n        objStore.createIndex('cacheName', 'cacheName', { unique: false });\n        objStore.createIndex('timestamp', 'timestamp', { unique: false });\n        // Previous versions of `workbox-expiration` used `this._cacheName`\n        // as the IDBDatabase name.\n        deleteDatabase(this._cacheName);\n    }\n    /**\n     * @param {string} url\n     * @param {number} timestamp\n     *\n     * @private\n     */\n    async setTimestamp(url, timestamp) {\n        url = normalizeURL(url);\n        const entry = {\n            url,\n            timestamp,\n            cacheName: this._cacheName,\n            // Creating an ID from the URL and cache name won't be necessary once\n            // Edge switches to Chromium and all browsers we support work with\n            // array keyPaths.\n            id: this._getId(url),\n        };\n        await this._db.put(OBJECT_STORE_NAME, entry);\n    }\n    /**\n     * Returns the timestamp stored for a given URL.\n     *\n     * @param {string} url\n     * @return {number}\n     *\n     * @private\n     */\n    async getTimestamp(url) {\n        const entry = await this._db.get(OBJECT_STORE_NAME, this._getId(url));\n        return entry.timestamp;\n    }\n    /**\n     * Iterates through all the entries in the object store (from newest to\n     * oldest) and removes entries once either `maxCount` is reached or the\n     * entry's timestamp is less than `minTimestamp`.\n     *\n     * @param {number} minTimestamp\n     * @param {number} maxCount\n     * @return {Array<string>}\n     *\n     * @private\n     */\n    async expireEntries(minTimestamp, maxCount) {\n        const entriesToDelete = await this._db.transaction(OBJECT_STORE_NAME, 'readwrite', (txn, done) => {\n            const store = txn.objectStore(OBJECT_STORE_NAME);\n            const request = store.index('timestamp').openCursor(null, 'prev');\n            const entriesToDelete = [];\n            let entriesNotDeletedCount = 0;\n            request.onsuccess = () => {\n                const cursor = request.result;\n                if (cursor) {\n                    const result = cursor.value;\n                    // TODO(philipwalton): once we can use a multi-key index, we\n                    // won't have to check `cacheName` here.\n                    if (result.cacheName === this._cacheName) {\n                        // Delete an entry if it's older than the max age or\n                        // if we already have the max number allowed.\n                        if ((minTimestamp && result.timestamp < minTimestamp) ||\n                            (maxCount && entriesNotDeletedCount >= maxCount)) {\n                            // TODO(philipwalton): we should be able to delete the\n                            // entry right here, but doing so causes an iteration\n                            // bug in Safari stable (fixed in TP). Instead we can\n                            // store the keys of the entries to delete, and then\n                            // delete the separate transactions.\n                            // https://github.com/GoogleChrome/workbox/issues/1978\n                            // cursor.delete();\n                            // We only need to return the URL, not the whole entry.\n                            entriesToDelete.push(cursor.value);\n                        }\n                        else {\n                            entriesNotDeletedCount++;\n                        }\n                    }\n                    cursor.continue();\n                }\n                else {\n                    done(entriesToDelete);\n                }\n            };\n        });\n        // TODO(philipwalton): once the Safari bug in the following issue is fixed,\n        // we should be able to remove this loop and do the entry deletion in the\n        // cursor loop above:\n        // https://github.com/GoogleChrome/workbox/issues/1978\n        const urlsDeleted = [];\n        for (const entry of entriesToDelete) {\n            await this._db.delete(OBJECT_STORE_NAME, entry.id);\n            urlsDeleted.push(entry.url);\n        }\n        return urlsDeleted;\n    }\n    /**\n     * Takes a URL and returns an ID that will be unique in the object store.\n     *\n     * @param {string} url\n     * @return {string}\n     *\n     * @private\n     */\n    _getId(url) {\n        // Creating an ID from the URL and cache name won't be necessary once\n        // Edge switches to Chromium and all browsers we support work with\n        // array keyPaths.\n        return this._cacheName + '|' + normalizeURL(url);\n    }\n}\nexport { CacheTimestampsModel };\n","/*\n  Copyright 2018 Google LLC\n\n  Use of this source code is governed by an MIT-style\n  license that can be found in the LICENSE file or at\n  https://opensource.org/licenses/MIT.\n*/\nimport { assert } from 'workbox-core/_private/assert.js';\nimport { dontWaitFor } from 'workbox-core/_private/dontWaitFor.js';\nimport { logger } from 'workbox-core/_private/logger.js';\nimport { WorkboxError } from 'workbox-core/_private/WorkboxError.js';\nimport { CacheTimestampsModel } from './models/CacheTimestampsModel.js';\nimport './_version.js';\n/**\n * The `CacheExpiration` class allows you define an expiration and / or\n * limit on the number of responses stored in a\n * [`Cache`](https://developer.mozilla.org/en-US/docs/Web/API/Cache).\n *\n * @memberof module:workbox-expiration\n */\nclass CacheExpiration {\n    /**\n     * To construct a new CacheExpiration instance you must provide at least\n     * one of the `config` properties.\n     *\n     * @param {string} cacheName Name of the cache to apply restrictions to.\n     * @param {Object} config\n     * @param {number} [config.maxEntries] The maximum number of entries to cache.\n     * Entries used the least will be removed as the maximum is reached.\n     * @param {number} [config.maxAgeSeconds] The maximum age of an entry before\n     * it's treated as stale and removed.\n     */\n    constructor(cacheName, config = {}) {\n        this._isRunning = false;\n        this._rerunRequested = false;\n        if (process.env.NODE_ENV !== 'production') {\n            assert.isType(cacheName, 'string', {\n                moduleName: 'workbox-expiration',\n                className: 'CacheExpiration',\n                funcName: 'constructor',\n                paramName: 'cacheName',\n            });\n            if (!(config.maxEntries || config.maxAgeSeconds)) {\n                throw new WorkboxError('max-entries-or-age-required', {\n                    moduleName: 'workbox-expiration',\n                    className: 'CacheExpiration',\n                    funcName: 'constructor',\n                });\n            }\n            if (config.maxEntries) {\n                assert.isType(config.maxEntries, 'number', {\n                    moduleName: 'workbox-expiration',\n                    className: 'CacheExpiration',\n                    funcName: 'constructor',\n                    paramName: 'config.maxEntries',\n                });\n                // TODO: Assert is positive\n            }\n            if (config.maxAgeSeconds) {\n                assert.isType(config.maxAgeSeconds, 'number', {\n                    moduleName: 'workbox-expiration',\n                    className: 'CacheExpiration',\n                    funcName: 'constructor',\n                    paramName: 'config.maxAgeSeconds',\n                });\n                // TODO: Assert is positive\n            }\n        }\n        this._maxEntries = config.maxEntries;\n        this._maxAgeSeconds = config.maxAgeSeconds;\n        this._cacheName = cacheName;\n        this._timestampModel = new CacheTimestampsModel(cacheName);\n    }\n    /**\n     * Expires entries for the given cache and given criteria.\n     */\n    async expireEntries() {\n        if (this._isRunning) {\n            this._rerunRequested = true;\n            return;\n        }\n        this._isRunning = true;\n        const minTimestamp = this._maxAgeSeconds ?\n            Date.now() - (this._maxAgeSeconds * 1000) : 0;\n        const urlsExpired = await this._timestampModel.expireEntries(minTimestamp, this._maxEntries);\n        // Delete URLs from the cache\n        const cache = await self.caches.open(this._cacheName);\n        for (const url of urlsExpired) {\n            await cache.delete(url);\n        }\n        if (process.env.NODE_ENV !== 'production') {\n            if (urlsExpired.length > 0) {\n                logger.groupCollapsed(`Expired ${urlsExpired.length} ` +\n                    `${urlsExpired.length === 1 ? 'entry' : 'entries'} and removed ` +\n                    `${urlsExpired.length === 1 ? 'it' : 'them'} from the ` +\n                    `'${this._cacheName}' cache.`);\n                logger.log(`Expired the following ${urlsExpired.length === 1 ?\n                    'URL' : 'URLs'}:`);\n                urlsExpired.forEach((url) => logger.log(`    ${url}`));\n                logger.groupEnd();\n            }\n            else {\n                logger.debug(`Cache expiration ran and found no entries to remove.`);\n            }\n        }\n        this._isRunning = false;\n        if (this._rerunRequested) {\n            this._rerunRequested = false;\n            dontWaitFor(this.expireEntries());\n        }\n    }\n    /**\n     * Update the timestamp for the given URL. This ensures the when\n     * removing entries based on maximum entries, most recently used\n     * is accurate or when expiring, the timestamp is up-to-date.\n     *\n     * @param {string} url\n     */\n    async updateTimestamp(url) {\n        if (process.env.NODE_ENV !== 'production') {\n            assert.isType(url, 'string', {\n                moduleName: 'workbox-expiration',\n                className: 'CacheExpiration',\n                funcName: 'updateTimestamp',\n                paramName: 'url',\n            });\n        }\n        await this._timestampModel.setTimestamp(url, Date.now());\n    }\n    /**\n     * Can be used to check if a URL has expired or not before it's used.\n     *\n     * This requires a look up from IndexedDB, so can be slow.\n     *\n     * Note: This method will not remove the cached entry, call\n     * `expireEntries()` to remove indexedDB and Cache entries.\n     *\n     * @param {string} url\n     * @return {boolean}\n     */\n    async isURLExpired(url) {\n        if (!this._maxAgeSeconds) {\n            if (process.env.NODE_ENV !== 'production') {\n                throw new WorkboxError(`expired-test-without-max-age`, {\n                    methodName: 'isURLExpired',\n                    paramName: 'maxAgeSeconds',\n                });\n            }\n            return false;\n        }\n        else {\n            const timestamp = await this._timestampModel.getTimestamp(url);\n            const expireOlderThan = Date.now() - (this._maxAgeSeconds * 1000);\n            return (timestamp < expireOlderThan);\n        }\n    }\n    /**\n     * Removes the IndexedDB object store used to keep track of cache expiration\n     * metadata.\n     */\n    async delete() {\n        // Make sure we don't attempt another rerun if we're called in the middle of\n        // a cache expiration.\n        this._rerunRequested = false;\n        await this._timestampModel.expireEntries(Infinity); // Expires all.\n    }\n}\nexport { CacheExpiration };\n","/*\n  Copyright 2018 Google LLC\n\n  Use of this source code is governed by an MIT-style\n  license that can be found in the LICENSE file or at\n  https://opensource.org/licenses/MIT.\n*/\nimport { assert } from 'workbox-core/_private/assert.js';\nimport { cacheNames } from 'workbox-core/_private/cacheNames.js';\nimport { dontWaitFor } from 'workbox-core/_private/dontWaitFor.js';\nimport { getFriendlyURL } from 'workbox-core/_private/getFriendlyURL.js';\nimport { logger } from 'workbox-core/_private/logger.js';\nimport { registerQuotaErrorCallback } from 'workbox-core/registerQuotaErrorCallback.js';\nimport { WorkboxError } from 'workbox-core/_private/WorkboxError.js';\nimport { CacheExpiration } from './CacheExpiration.js';\nimport './_version.js';\n/**\n * This plugin can be used in the Workbox APIs to regularly enforce a\n * limit on the age and / or the number of cached requests.\n *\n * Whenever a cached request is used or updated, this plugin will look\n * at the used Cache and remove any old or extra requests.\n *\n * When using `maxAgeSeconds`, requests may be used *once* after expiring\n * because the expiration clean up will not have occurred until *after* the\n * cached request has been used. If the request has a \"Date\" header, then\n * a light weight expiration check is performed and the request will not be\n * used immediately.\n *\n * When using `maxEntries`, the entry least-recently requested will be removed\n * from the cache first.\n *\n * @memberof module:workbox-expiration\n */\nclass ExpirationPlugin {\n    /**\n     * @param {Object} config\n     * @param {number} [config.maxEntries] The maximum number of entries to cache.\n     * Entries used the least will be removed as the maximum is reached.\n     * @param {number} [config.maxAgeSeconds] The maximum age of an entry before\n     * it's treated as stale and removed.\n     * @param {boolean} [config.purgeOnQuotaError] Whether to opt this cache in to\n     * automatic deletion if the available storage quota has been exceeded.\n     */\n    constructor(config = {}) {\n        /**\n         * A \"lifecycle\" callback that will be triggered automatically by the\n         * `workbox-strategies` handlers when a `Response` is about to be returned\n         * from a [Cache](https://developer.mozilla.org/en-US/docs/Web/API/Cache) to\n         * the handler. It allows the `Response` to be inspected for freshness and\n         * prevents it from being used if the `Response`'s `Date` header value is\n         * older than the configured `maxAgeSeconds`.\n         *\n         * @param {Object} options\n         * @param {string} options.cacheName Name of the cache the response is in.\n         * @param {Response} options.cachedResponse The `Response` object that's been\n         *     read from a cache and whose freshness should be checked.\n         * @return {Response} Either the `cachedResponse`, if it's\n         *     fresh, or `null` if the `Response` is older than `maxAgeSeconds`.\n         *\n         * @private\n         */\n        this.cachedResponseWillBeUsed = async ({ event, request, cacheName, cachedResponse }) => {\n            if (!cachedResponse) {\n                return null;\n            }\n            const isFresh = this._isResponseDateFresh(cachedResponse);\n            // Expire entries to ensure that even if the expiration date has\n            // expired, it'll only be used once.\n            const cacheExpiration = this._getCacheExpiration(cacheName);\n            dontWaitFor(cacheExpiration.expireEntries());\n            // Update the metadata for the request URL to the current timestamp,\n            // but don't `await` it as we don't want to block the response.\n            const updateTimestampDone = cacheExpiration.updateTimestamp(request.url);\n            if (event) {\n                try {\n                    event.waitUntil(updateTimestampDone);\n                }\n                catch (error) {\n                    if (process.env.NODE_ENV !== 'production') {\n                        // The event may not be a fetch event; only log the URL if it is.\n                        if ('request' in event) {\n                            logger.warn(`Unable to ensure service worker stays alive when ` +\n                                `updating cache entry for ` +\n                                `'${getFriendlyURL(event.request.url)}'.`);\n                        }\n                    }\n                }\n            }\n            return isFresh ? cachedResponse : null;\n        };\n        /**\n         * A \"lifecycle\" callback that will be triggered automatically by the\n         * `workbox-strategies` handlers when an entry is added to a cache.\n         *\n         * @param {Object} options\n         * @param {string} options.cacheName Name of the cache that was updated.\n         * @param {string} options.request The Request for the cached entry.\n         *\n         * @private\n         */\n        this.cacheDidUpdate = async ({ cacheName, request }) => {\n            if (process.env.NODE_ENV !== 'production') {\n                assert.isType(cacheName, 'string', {\n                    moduleName: 'workbox-expiration',\n                    className: 'Plugin',\n                    funcName: 'cacheDidUpdate',\n                    paramName: 'cacheName',\n                });\n                assert.isInstance(request, Request, {\n                    moduleName: 'workbox-expiration',\n                    className: 'Plugin',\n                    funcName: 'cacheDidUpdate',\n                    paramName: 'request',\n                });\n            }\n            const cacheExpiration = this._getCacheExpiration(cacheName);\n            await cacheExpiration.updateTimestamp(request.url);\n            await cacheExpiration.expireEntries();\n        };\n        if (process.env.NODE_ENV !== 'production') {\n            if (!(config.maxEntries || config.maxAgeSeconds)) {\n                throw new WorkboxError('max-entries-or-age-required', {\n                    moduleName: 'workbox-expiration',\n                    className: 'Plugin',\n                    funcName: 'constructor',\n                });\n            }\n            if (config.maxEntries) {\n                assert.isType(config.maxEntries, 'number', {\n                    moduleName: 'workbox-expiration',\n                    className: 'Plugin',\n                    funcName: 'constructor',\n                    paramName: 'config.maxEntries',\n                });\n            }\n            if (config.maxAgeSeconds) {\n                assert.isType(config.maxAgeSeconds, 'number', {\n                    moduleName: 'workbox-expiration',\n                    className: 'Plugin',\n                    funcName: 'constructor',\n                    paramName: 'config.maxAgeSeconds',\n                });\n            }\n        }\n        this._config = config;\n        this._maxAgeSeconds = config.maxAgeSeconds;\n        this._cacheExpirations = new Map();\n        if (config.purgeOnQuotaError) {\n            registerQuotaErrorCallback(() => this.deleteCacheAndMetadata());\n        }\n    }\n    /**\n     * A simple helper method to return a CacheExpiration instance for a given\n     * cache name.\n     *\n     * @param {string} cacheName\n     * @return {CacheExpiration}\n     *\n     * @private\n     */\n    _getCacheExpiration(cacheName) {\n        if (cacheName === cacheNames.getRuntimeName()) {\n            throw new WorkboxError('expire-custom-caches-only');\n        }\n        let cacheExpiration = this._cacheExpirations.get(cacheName);\n        if (!cacheExpiration) {\n            cacheExpiration = new CacheExpiration(cacheName, this._config);\n            this._cacheExpirations.set(cacheName, cacheExpiration);\n        }\n        return cacheExpiration;\n    }\n    /**\n     * @param {Response} cachedResponse\n     * @return {boolean}\n     *\n     * @private\n     */\n    _isResponseDateFresh(cachedResponse) {\n        if (!this._maxAgeSeconds) {\n            // We aren't expiring by age, so return true, it's fresh\n            return true;\n        }\n        // Check if the 'date' header will suffice a quick expiration check.\n        // See https://github.com/GoogleChromeLabs/sw-toolbox/issues/164 for\n        // discussion.\n        const dateHeaderTimestamp = this._getDateHeaderTimestamp(cachedResponse);\n        if (dateHeaderTimestamp === null) {\n            // Unable to parse date, so assume it's fresh.\n            return true;\n        }\n        // If we have a valid headerTime, then our response is fresh iff the\n        // headerTime plus maxAgeSeconds is greater than the current time.\n        const now = Date.now();\n        return dateHeaderTimestamp >= now - (this._maxAgeSeconds * 1000);\n    }\n    /**\n     * This method will extract the data header and parse it into a useful\n     * value.\n     *\n     * @param {Response} cachedResponse\n     * @return {number|null}\n     *\n     * @private\n     */\n    _getDateHeaderTimestamp(cachedResponse) {\n        if (!cachedResponse.headers.has('date')) {\n            return null;\n        }\n        const dateHeader = cachedResponse.headers.get('date');\n        const parsedDate = new Date(dateHeader);\n        const headerTime = parsedDate.getTime();\n        // If the Date header was invalid for some reason, parsedDate.getTime()\n        // will return NaN.\n        if (isNaN(headerTime)) {\n            return null;\n        }\n        return headerTime;\n    }\n    /**\n     * This is a helper method that performs two operations:\n     *\n     * - Deletes *all* the underlying Cache instances associated with this plugin\n     * instance, by calling caches.delete() on your behalf.\n     * - Deletes the metadata from IndexedDB used to keep track of expiration\n     * details for each Cache instance.\n     *\n     * When using cache expiration, calling this method is preferable to calling\n     * `caches.delete()` directly, since this will ensure that the IndexedDB\n     * metadata is also cleanly removed and open IndexedDB instances are deleted.\n     *\n     * Note that if you're *not* using cache expiration for a given cache, calling\n     * `caches.delete()` and passing in the cache's name should be sufficient.\n     * There is no Workbox-specific method needed for cleanup in that case.\n     */\n    async deleteCacheAndMetadata() {\n        // Do this one at a time instead of all at once via `Promise.all()` to\n        // reduce the chance of inconsistency if a promise rejects.\n        for (const [cacheName, cacheExpiration] of this._cacheExpirations) {\n            await self.caches.delete(cacheName);\n            await cacheExpiration.delete();\n        }\n        // Reset this._cacheExpirations to its initial state.\n        this._cacheExpirations = new Map();\n    }\n}\nexport { ExpirationPlugin };\n","/*\n  Copyright 2018 Google LLC\n\n  Use of this source code is governed by an MIT-style\n  license that can be found in the LICENSE file or at\n  https://opensource.org/licenses/MIT.\n*/\nimport { logger } from '../_private/logger.js';\nimport { quotaErrorCallbacks } from '../models/quotaErrorCallbacks.js';\nimport '../_version.js';\n/**\n * Runs all of the callback functions, one at a time sequentially, in the order\n * in which they were registered.\n *\n * @memberof module:workbox-core\n * @private\n */\nasync function executeQuotaErrorCallbacks() {\n    if (process.env.NODE_ENV !== 'production') {\n        logger.log(`About to run ${quotaErrorCallbacks.size} ` +\n            `callbacks to clean up caches.`);\n    }\n    for (const callback of quotaErrorCallbacks) {\n        await callback();\n        if (process.env.NODE_ENV !== 'production') {\n            logger.log(callback, 'is complete.');\n        }\n    }\n    if (process.env.NODE_ENV !== 'production') {\n        logger.log('Finished running callbacks.');\n    }\n}\nexport { executeQuotaErrorCallbacks };\n","/*\n  Copyright 2018 Google LLC\n\n  Use of this source code is governed by an MIT-style\n  license that can be found in the LICENSE file or at\n  https://opensource.org/licenses/MIT.\n*/\nimport '../_version.js';\nexport const pluginUtils = {\n    filter: (plugins, callbackName) => {\n        return plugins.filter((plugin) => callbackName in plugin);\n    },\n};\n","/*\n  Copyright 2018 Google LLC\n\n  Use of this source code is governed by an MIT-style\n  license that can be found in the LICENSE file or at\n  https://opensource.org/licenses/MIT.\n*/\nimport { assert } from './assert.js';\nimport { executeQuotaErrorCallbacks } from './executeQuotaErrorCallbacks.js';\nimport { getFriendlyURL } from './getFriendlyURL.js';\nimport { logger } from './logger.js';\nimport { pluginUtils } from '../utils/pluginUtils.js';\nimport { WorkboxError } from './WorkboxError.js';\nimport '../_version.js';\n/**\n * Checks the list of plugins for the cacheKeyWillBeUsed callback, and\n * executes any of those callbacks found in sequence. The final `Request` object\n * returned by the last plugin is treated as the cache key for cache reads\n * and/or writes.\n *\n * @param {Object} options\n * @param {Request} options.request\n * @param {string} options.mode\n * @param {Array<Object>} [options.plugins=[]]\n * @return {Promise<Request>}\n *\n * @private\n * @memberof module:workbox-core\n */\nconst _getEffectiveRequest = async ({ request, mode, plugins = [], }) => {\n    const cacheKeyWillBeUsedPlugins = pluginUtils.filter(plugins, \"cacheKeyWillBeUsed\" /* CACHE_KEY_WILL_BE_USED */);\n    let effectiveRequest = request;\n    for (const plugin of cacheKeyWillBeUsedPlugins) {\n        effectiveRequest = await plugin[\"cacheKeyWillBeUsed\" /* CACHE_KEY_WILL_BE_USED */].call(plugin, { mode, request: effectiveRequest });\n        if (typeof effectiveRequest === 'string') {\n            effectiveRequest = new Request(effectiveRequest);\n        }\n        if (process.env.NODE_ENV !== 'production') {\n            assert.isInstance(effectiveRequest, Request, {\n                moduleName: 'Plugin',\n                funcName: \"cacheKeyWillBeUsed\" /* CACHE_KEY_WILL_BE_USED */,\n                isReturnValueProblem: true,\n            });\n        }\n    }\n    return effectiveRequest;\n};\n/**\n * This method will call cacheWillUpdate on the available plugins (or use\n * status === 200) to determine if the Response is safe and valid to cache.\n *\n * @param {Object} options\n * @param {Request} options.request\n * @param {Response} options.response\n * @param {Event} [options.event]\n * @param {Array<Object>} [options.plugins=[]]\n * @return {Promise<Response>}\n *\n * @private\n * @memberof module:workbox-core\n */\nconst _isResponseSafeToCache = async ({ request, response, event, plugins = [], }) => {\n    let responseToCache = response;\n    let pluginsUsed = false;\n    for (const plugin of plugins) {\n        if (\"cacheWillUpdate\" /* CACHE_WILL_UPDATE */ in plugin) {\n            pluginsUsed = true;\n            const pluginMethod = plugin[\"cacheWillUpdate\" /* CACHE_WILL_UPDATE */];\n            responseToCache = await pluginMethod.call(plugin, {\n                request,\n                response: responseToCache,\n                event,\n            });\n            if (process.env.NODE_ENV !== 'production') {\n                if (responseToCache) {\n                    assert.isInstance(responseToCache, Response, {\n                        moduleName: 'Plugin',\n                        funcName: \"cacheWillUpdate\" /* CACHE_WILL_UPDATE */,\n                        isReturnValueProblem: true,\n                    });\n                }\n            }\n            if (!responseToCache) {\n                break;\n            }\n        }\n    }\n    if (!pluginsUsed) {\n        if (process.env.NODE_ENV !== 'production') {\n            if (responseToCache) {\n                if (responseToCache.status !== 200) {\n                    if (responseToCache.status === 0) {\n                        logger.warn(`The response for '${request.url}' is an opaque ` +\n                            `response. The caching strategy that you're using will not ` +\n                            `cache opaque responses by default.`);\n                    }\n                    else {\n                        logger.debug(`The response for '${request.url}' returned ` +\n                            `a status code of '${response.status}' and won't be cached as a ` +\n                            `result.`);\n                    }\n                }\n            }\n        }\n        responseToCache = responseToCache && responseToCache.status === 200 ?\n            responseToCache : undefined;\n    }\n    return responseToCache ? responseToCache : null;\n};\n/**\n * This is a wrapper around cache.match().\n *\n * @param {Object} options\n * @param {string} options.cacheName Name of the cache to match against.\n * @param {Request} options.request The Request that will be used to look up\n *     cache entries.\n * @param {Event} [options.event] The event that prompted the action.\n * @param {Object} [options.matchOptions] Options passed to cache.match().\n * @param {Array<Object>} [options.plugins=[]] Array of plugins.\n * @return {Response} A cached response if available.\n *\n * @private\n * @memberof module:workbox-core\n */\nconst matchWrapper = async ({ cacheName, request, event, matchOptions, plugins = [], }) => {\n    const cache = await self.caches.open(cacheName);\n    const effectiveRequest = await _getEffectiveRequest({\n        plugins, request, mode: 'read'\n    });\n    let cachedResponse = await cache.match(effectiveRequest, matchOptions);\n    if (process.env.NODE_ENV !== 'production') {\n        if (cachedResponse) {\n            logger.debug(`Found a cached response in '${cacheName}'.`);\n        }\n        else {\n            logger.debug(`No cached response found in '${cacheName}'.`);\n        }\n    }\n    for (const plugin of plugins) {\n        if (\"cachedResponseWillBeUsed\" /* CACHED_RESPONSE_WILL_BE_USED */ in plugin) {\n            const pluginMethod = plugin[\"cachedResponseWillBeUsed\" /* CACHED_RESPONSE_WILL_BE_USED */];\n            cachedResponse = await pluginMethod.call(plugin, {\n                cacheName,\n                event,\n                matchOptions,\n                cachedResponse,\n                request: effectiveRequest,\n            });\n            if (process.env.NODE_ENV !== 'production') {\n                if (cachedResponse) {\n                    assert.isInstance(cachedResponse, Response, {\n                        moduleName: 'Plugin',\n                        funcName: \"cachedResponseWillBeUsed\" /* CACHED_RESPONSE_WILL_BE_USED */,\n                        isReturnValueProblem: true,\n                    });\n                }\n            }\n        }\n    }\n    return cachedResponse;\n};\n/**\n * Wrapper around cache.put().\n *\n * Will call `cacheDidUpdate` on plugins if the cache was updated, using\n * `matchOptions` when determining what the old entry is.\n *\n * @param {Object} options\n * @param {string} options.cacheName\n * @param {Request} options.request\n * @param {Response} options.response\n * @param {Event} [options.event]\n * @param {Array<Object>} [options.plugins=[]]\n * @param {Object} [options.matchOptions]\n *\n * @private\n * @memberof module:workbox-core\n */\nconst putWrapper = async ({ cacheName, request, response, event, plugins = [], matchOptions, }) => {\n    if (process.env.NODE_ENV !== 'production') {\n        if (request.method && request.method !== 'GET') {\n            throw new WorkboxError('attempt-to-cache-non-get-request', {\n                url: getFriendlyURL(request.url),\n                method: request.method,\n            });\n        }\n    }\n    const effectiveRequest = await _getEffectiveRequest({\n        plugins, request, mode: 'write'\n    });\n    if (!response) {\n        if (process.env.NODE_ENV !== 'production') {\n            logger.error(`Cannot cache non-existent response for ` +\n                `'${getFriendlyURL(effectiveRequest.url)}'.`);\n        }\n        throw new WorkboxError('cache-put-with-no-response', {\n            url: getFriendlyURL(effectiveRequest.url),\n        });\n    }\n    const responseToCache = await _isResponseSafeToCache({\n        event,\n        plugins,\n        response,\n        request: effectiveRequest,\n    });\n    if (!responseToCache) {\n        if (process.env.NODE_ENV !== 'production') {\n            logger.debug(`Response '${getFriendlyURL(effectiveRequest.url)}' will ` +\n                `not be cached.`, responseToCache);\n        }\n        return;\n    }\n    const cache = await self.caches.open(cacheName);\n    const updatePlugins = pluginUtils.filter(plugins, \"cacheDidUpdate\" /* CACHE_DID_UPDATE */);\n    const oldResponse = updatePlugins.length > 0 ?\n        await matchWrapper({ cacheName, matchOptions, request: effectiveRequest }) :\n        null;\n    if (process.env.NODE_ENV !== 'production') {\n        logger.debug(`Updating the '${cacheName}' cache with a new Response for ` +\n            `${getFriendlyURL(effectiveRequest.url)}.`);\n    }\n    try {\n        await cache.put(effectiveRequest, responseToCache);\n    }\n    catch (error) {\n        // See https://developer.mozilla.org/en-US/docs/Web/API/DOMException#exception-QuotaExceededError\n        if (error.name === 'QuotaExceededError') {\n            await executeQuotaErrorCallbacks();\n        }\n        throw error;\n    }\n    for (const plugin of updatePlugins) {\n        await plugin[\"cacheDidUpdate\" /* CACHE_DID_UPDATE */].call(plugin, {\n            cacheName,\n            event,\n            oldResponse,\n            newResponse: responseToCache,\n            request: effectiveRequest,\n        });\n    }\n};\nexport const cacheWrapper = {\n    put: putWrapper,\n    match: matchWrapper,\n};\n","/*\n  Copyright 2018 Google LLC\n\n  Use of this source code is governed by an MIT-style\n  license that can be found in the LICENSE file or at\n  https://opensource.org/licenses/MIT.\n*/\nimport { WorkboxError } from './WorkboxError.js';\nimport { logger } from './logger.js';\nimport { assert } from './assert.js';\nimport { getFriendlyURL } from '../_private/getFriendlyURL.js';\nimport { pluginUtils } from '../utils/pluginUtils.js';\nimport '../_version.js';\n/**\n * Wrapper around the fetch API.\n *\n * Will call requestWillFetch on available plugins.\n *\n * @param {Object} options\n * @param {Request|string} options.request\n * @param {Object} [options.fetchOptions]\n * @param {ExtendableEvent} [options.event]\n * @param {Array<Object>} [options.plugins=[]]\n * @return {Promise<Response>}\n *\n * @private\n * @memberof module:workbox-core\n */\nconst wrappedFetch = async ({ request, fetchOptions, event, plugins = [], }) => {\n    if (typeof request === 'string') {\n        request = new Request(request);\n    }\n    // We *should* be able to call `await event.preloadResponse` even if it's\n    // undefined, but for some reason, doing so leads to errors in our Node unit\n    // tests. To work around that, explicitly check preloadResponse's value first.\n    if (event instanceof FetchEvent && event.preloadResponse) {\n        const possiblePreloadResponse = await event.preloadResponse;\n        if (possiblePreloadResponse) {\n            if (process.env.NODE_ENV !== 'production') {\n                logger.log(`Using a preloaded navigation response for ` +\n                    `'${getFriendlyURL(request.url)}'`);\n            }\n            return possiblePreloadResponse;\n        }\n    }\n    if (process.env.NODE_ENV !== 'production') {\n        assert.isInstance(request, Request, {\n            paramName: 'request',\n            expectedClass: Request,\n            moduleName: 'workbox-core',\n            className: 'fetchWrapper',\n            funcName: 'wrappedFetch',\n        });\n    }\n    const failedFetchPlugins = pluginUtils.filter(plugins, \"fetchDidFail\" /* FETCH_DID_FAIL */);\n    // If there is a fetchDidFail plugin, we need to save a clone of the\n    // original request before it's either modified by a requestWillFetch\n    // plugin or before the original request's body is consumed via fetch().\n    const originalRequest = failedFetchPlugins.length > 0 ?\n        request.clone() : null;\n    try {\n        for (const plugin of plugins) {\n            if (\"requestWillFetch\" /* REQUEST_WILL_FETCH */ in plugin) {\n                const pluginMethod = plugin[\"requestWillFetch\" /* REQUEST_WILL_FETCH */];\n                const requestClone = request.clone();\n                request = await pluginMethod.call(plugin, {\n                    request: requestClone,\n                    event,\n                });\n                if (process.env.NODE_ENV !== 'production') {\n                    if (request) {\n                        assert.isInstance(request, Request, {\n                            moduleName: 'Plugin',\n                            funcName: \"cachedResponseWillBeUsed\" /* CACHED_RESPONSE_WILL_BE_USED */,\n                            isReturnValueProblem: true,\n                        });\n                    }\n                }\n            }\n        }\n    }\n    catch (err) {\n        throw new WorkboxError('plugin-error-request-will-fetch', {\n            thrownError: err,\n        });\n    }\n    // The request can be altered by plugins with `requestWillFetch` making\n    // the original request (Most likely from a `fetch` event) to be different\n    // to the Request we make. Pass both to `fetchDidFail` to aid debugging.\n    const pluginFilteredRequest = request.clone();\n    try {\n        let fetchResponse;\n        // See https://github.com/GoogleChrome/workbox/issues/1796\n        if (request.mode === 'navigate') {\n            fetchResponse = await fetch(request);\n        }\n        else {\n            fetchResponse = await fetch(request, fetchOptions);\n        }\n        if (process.env.NODE_ENV !== 'production') {\n            logger.debug(`Network request for ` +\n                `'${getFriendlyURL(request.url)}' returned a response with ` +\n                `status '${fetchResponse.status}'.`);\n        }\n        for (const plugin of plugins) {\n            if (\"fetchDidSucceed\" /* FETCH_DID_SUCCEED */ in plugin) {\n                fetchResponse = await plugin[\"fetchDidSucceed\" /* FETCH_DID_SUCCEED */]\n                    .call(plugin, {\n                    event,\n                    request: pluginFilteredRequest,\n                    response: fetchResponse,\n                });\n                if (process.env.NODE_ENV !== 'production') {\n                    if (fetchResponse) {\n                        assert.isInstance(fetchResponse, Response, {\n                            moduleName: 'Plugin',\n                            funcName: \"fetchDidSucceed\" /* FETCH_DID_SUCCEED */,\n                            isReturnValueProblem: true,\n                        });\n                    }\n                }\n            }\n        }\n        return fetchResponse;\n    }\n    catch (error) {\n        if (process.env.NODE_ENV !== 'production') {\n            logger.error(`Network request for ` +\n                `'${getFriendlyURL(request.url)}' threw an error.`, error);\n        }\n        for (const plugin of failedFetchPlugins) {\n            await plugin[\"fetchDidFail\" /* FETCH_DID_FAIL */].call(plugin, {\n                error,\n                event,\n                originalRequest: originalRequest.clone(),\n                request: pluginFilteredRequest.clone(),\n            });\n        }\n        throw error;\n    }\n};\nconst fetchWrapper = {\n    fetch: wrappedFetch,\n};\nexport { fetchWrapper };\n","\"use strict\";\n// @ts-ignore\ntry {\n    self['workbox:strategies:5.1.4'] && _();\n}\ncatch (e) { }\n","/*\n  Copyright 2018 Google LLC\n\n  Use of this source code is governed by an MIT-style\n  license that can be found in the LICENSE file or at\n  https://opensource.org/licenses/MIT.\n*/\nimport { logger } from 'workbox-core/_private/logger.js';\nimport { getFriendlyURL } from 'workbox-core/_private/getFriendlyURL.js';\nimport '../_version.js';\nexport const messages = {\n    strategyStart: (strategyName, request) => `Using ${strategyName} to respond to '${getFriendlyURL(request.url)}'`,\n    printFinalResponse: (response) => {\n        if (response) {\n            logger.groupCollapsed(`View the final response here.`);\n            logger.log(response || '[No response returned]');\n            logger.groupEnd();\n        }\n    },\n};\n","/*\n  Copyright 2018 Google LLC\n\n  Use of this source code is governed by an MIT-style\n  license that can be found in the LICENSE file or at\n  https://opensource.org/licenses/MIT.\n*/\nimport '../_version.js';\nexport const cacheOkAndOpaquePlugin = {\n    /**\n     * Returns a valid response (to allow caching) if the status is 200 (OK) or\n     * 0 (opaque).\n     *\n     * @param {Object} options\n     * @param {Response} options.response\n     * @return {Response|null}\n     *\n     * @private\n     */\n    cacheWillUpdate: async ({ response }) => {\n        if (response.status === 200 || response.status === 0) {\n            return response;\n        }\n        return null;\n    },\n};\n","/*\n  Copyright 2018 Google LLC\n\n  Use of this source code is governed by an MIT-style\n  license that can be found in the LICENSE file or at\n  https://opensource.org/licenses/MIT.\n*/\nimport { assert } from 'workbox-core/_private/assert.js';\nimport { cacheNames } from 'workbox-core/_private/cacheNames.js';\nimport { cacheWrapper } from 'workbox-core/_private/cacheWrapper.js';\nimport { fetchWrapper } from 'workbox-core/_private/fetchWrapper.js';\nimport { getFriendlyURL } from 'workbox-core/_private/getFriendlyURL.js';\nimport { logger } from 'workbox-core/_private/logger.js';\nimport { WorkboxError } from 'workbox-core/_private/WorkboxError.js';\nimport { messages } from './utils/messages.js';\nimport { cacheOkAndOpaquePlugin } from './plugins/cacheOkAndOpaquePlugin.js';\nimport './_version.js';\n/**\n * An implementation of a\n * [network first]{@link https://developers.google.com/web/fundamentals/instant-and-offline/offline-cookbook/#network-falling-back-to-cache}\n * request strategy.\n *\n * By default, this strategy will cache responses with a 200 status code as\n * well as [opaque responses]{@link https://developers.google.com/web/tools/workbox/guides/handle-third-party-requests}.\n * Opaque responses are are cross-origin requests where the response doesn't\n * support [CORS]{@link https://enable-cors.org/}.\n *\n * If the network request fails, and there is no cache match, this will throw\n * a `WorkboxError` exception.\n *\n * @memberof module:workbox-strategies\n */\nclass NetworkFirst {\n    /**\n     * @param {Object} options\n     * @param {string} options.cacheName Cache name to store and retrieve\n     * requests. Defaults to cache names provided by\n     * [workbox-core]{@link module:workbox-core.cacheNames}.\n     * @param {Array<Object>} options.plugins [Plugins]{@link https://developers.google.com/web/tools/workbox/guides/using-plugins}\n     * to use in conjunction with this caching strategy.\n     * @param {Object} options.fetchOptions Values passed along to the\n     * [`init`](https://developer.mozilla.org/en-US/docs/Web/API/WindowOrWorkerGlobalScope/fetch#Parameters)\n     * of all fetch() requests made by this strategy.\n     * @param {Object} options.matchOptions [`CacheQueryOptions`](https://w3c.github.io/ServiceWorker/#dictdef-cachequeryoptions)\n     * @param {number} options.networkTimeoutSeconds If set, any network requests\n     * that fail to respond within the timeout will fallback to the cache.\n     *\n     * This option can be used to combat\n     * \"[lie-fi]{@link https://developers.google.com/web/fundamentals/performance/poor-connectivity/#lie-fi}\"\n     * scenarios.\n     */\n    constructor(options = {}) {\n        this._cacheName = cacheNames.getRuntimeName(options.cacheName);\n        if (options.plugins) {\n            const isUsingCacheWillUpdate = options.plugins.some((plugin) => !!plugin.cacheWillUpdate);\n            this._plugins = isUsingCacheWillUpdate ?\n                options.plugins : [cacheOkAndOpaquePlugin, ...options.plugins];\n        }\n        else {\n            // No plugins passed in, use the default plugin.\n            this._plugins = [cacheOkAndOpaquePlugin];\n        }\n        this._networkTimeoutSeconds = options.networkTimeoutSeconds || 0;\n        if (process.env.NODE_ENV !== 'production') {\n            if (this._networkTimeoutSeconds) {\n                assert.isType(this._networkTimeoutSeconds, 'number', {\n                    moduleName: 'workbox-strategies',\n                    className: 'NetworkFirst',\n                    funcName: 'constructor',\n                    paramName: 'networkTimeoutSeconds',\n                });\n            }\n        }\n        this._fetchOptions = options.fetchOptions;\n        this._matchOptions = options.matchOptions;\n    }\n    /**\n     * This method will perform a request strategy and follows an API that\n     * will work with the\n     * [Workbox Router]{@link module:workbox-routing.Router}.\n     *\n     * @param {Object} options\n     * @param {Request|string} options.request A request to run this strategy for.\n     * @param {Event} [options.event] The event that triggered the request.\n     * @return {Promise<Response>}\n     */\n    async handle({ event, request }) {\n        const logs = [];\n        if (typeof request === 'string') {\n            request = new Request(request);\n        }\n        if (process.env.NODE_ENV !== 'production') {\n            assert.isInstance(request, Request, {\n                moduleName: 'workbox-strategies',\n                className: 'NetworkFirst',\n                funcName: 'handle',\n                paramName: 'makeRequest',\n            });\n        }\n        const promises = [];\n        let timeoutId;\n        if (this._networkTimeoutSeconds) {\n            const { id, promise } = this._getTimeoutPromise({ request, event, logs });\n            timeoutId = id;\n            promises.push(promise);\n        }\n        const networkPromise = this._getNetworkPromise({ timeoutId, request, event, logs });\n        promises.push(networkPromise);\n        // Promise.race() will resolve as soon as the first promise resolves.\n        let response = await Promise.race(promises);\n        // If Promise.race() resolved with null, it might be due to a network\n        // timeout + a cache miss. If that were to happen, we'd rather wait until\n        // the networkPromise resolves instead of returning null.\n        // Note that it's fine to await an already-resolved promise, so we don't\n        // have to check to see if it's still \"in flight\".\n        if (!response) {\n            response = await networkPromise;\n        }\n        if (process.env.NODE_ENV !== 'production') {\n            logger.groupCollapsed(messages.strategyStart('NetworkFirst', request));\n            for (const log of logs) {\n                logger.log(log);\n            }\n            messages.printFinalResponse(response);\n            logger.groupEnd();\n        }\n        if (!response) {\n            throw new WorkboxError('no-response', { url: request.url });\n        }\n        return response;\n    }\n    /**\n     * @param {Object} options\n     * @param {Request} options.request\n     * @param {Array} options.logs A reference to the logs array\n     * @param {Event} [options.event]\n     * @return {Promise<Response>}\n     *\n     * @private\n     */\n    _getTimeoutPromise({ request, logs, event }) {\n        let timeoutId;\n        const timeoutPromise = new Promise((resolve) => {\n            const onNetworkTimeout = async () => {\n                if (process.env.NODE_ENV !== 'production') {\n                    logs.push(`Timing out the network response at ` +\n                        `${this._networkTimeoutSeconds} seconds.`);\n                }\n                resolve(await this._respondFromCache({ request, event }));\n            };\n            timeoutId = setTimeout(onNetworkTimeout, this._networkTimeoutSeconds * 1000);\n        });\n        return {\n            promise: timeoutPromise,\n            id: timeoutId,\n        };\n    }\n    /**\n     * @param {Object} options\n     * @param {number|undefined} options.timeoutId\n     * @param {Request} options.request\n     * @param {Array} options.logs A reference to the logs Array.\n     * @param {Event} [options.event]\n     * @return {Promise<Response>}\n     *\n     * @private\n     */\n    async _getNetworkPromise({ timeoutId, request, logs, event }) {\n        let error;\n        let response;\n        try {\n            response = await fetchWrapper.fetch({\n                request,\n                event,\n                fetchOptions: this._fetchOptions,\n                plugins: this._plugins,\n            });\n        }\n        catch (err) {\n            error = err;\n        }\n        if (timeoutId) {\n            clearTimeout(timeoutId);\n        }\n        if (process.env.NODE_ENV !== 'production') {\n            if (response) {\n                logs.push(`Got response from network.`);\n            }\n            else {\n                logs.push(`Unable to get a response from the network. Will respond ` +\n                    `with a cached response.`);\n            }\n        }\n        if (error || !response) {\n            response = await this._respondFromCache({ request, event });\n            if (process.env.NODE_ENV !== 'production') {\n                if (response) {\n                    logs.push(`Found a cached response in the '${this._cacheName}'` +\n                        ` cache.`);\n                }\n                else {\n                    logs.push(`No response found in the '${this._cacheName}' cache.`);\n                }\n            }\n        }\n        else {\n            // Keep the service worker alive while we put the request in the cache\n            const responseClone = response.clone();\n            const cachePut = cacheWrapper.put({\n                cacheName: this._cacheName,\n                request,\n                response: responseClone,\n                event,\n                plugins: this._plugins,\n            });\n            if (event) {\n                try {\n                    // The event has been responded to so we can keep the SW alive to\n                    // respond to the request\n                    event.waitUntil(cachePut);\n                }\n                catch (err) {\n                    if (process.env.NODE_ENV !== 'production') {\n                        logger.warn(`Unable to ensure service worker stays alive when ` +\n                            `updating cache for '${getFriendlyURL(request.url)}'.`);\n                    }\n                }\n            }\n        }\n        return response;\n    }\n    /**\n     * Used if the network timeouts or fails to make the request.\n     *\n     * @param {Object} options\n     * @param {Request} request The request to match in the cache\n     * @param {Event} [options.event]\n     * @return {Promise<Object>}\n     *\n     * @private\n     */\n    _respondFromCache({ event, request }) {\n        return cacheWrapper.match({\n            cacheName: this._cacheName,\n            request,\n            event,\n            matchOptions: this._matchOptions,\n            plugins: this._plugins,\n        });\n    }\n}\nexport { NetworkFirst };\n","/*\n  Copyright 2018 Google LLC\n\n  Use of this source code is governed by an MIT-style\n  license that can be found in the LICENSE file or at\n  https://opensource.org/licenses/MIT.\n*/\nimport { assert } from 'workbox-core/_private/assert.js';\nimport { cacheNames } from 'workbox-core/_private/cacheNames.js';\nimport { cacheWrapper } from 'workbox-core/_private/cacheWrapper.js';\nimport { fetchWrapper } from 'workbox-core/_private/fetchWrapper.js';\nimport { getFriendlyURL } from 'workbox-core/_private/getFriendlyURL.js';\nimport { logger } from 'workbox-core/_private/logger.js';\nimport { WorkboxError } from 'workbox-core/_private/WorkboxError.js';\nimport { messages } from './utils/messages.js';\nimport './_version.js';\n/**\n * An implementation of a [cache-first]{@link https://developers.google.com/web/fundamentals/instant-and-offline/offline-cookbook/#cache-falling-back-to-network}\n * request strategy.\n *\n * A cache first strategy is useful for assets that have been revisioned,\n * such as URLs like `/styles/example.a8f5f1.css`, since they\n * can be cached for long periods of time.\n *\n * If the network request fails, and there is no cache match, this will throw\n * a `WorkboxError` exception.\n *\n * @memberof module:workbox-strategies\n */\nclass CacheFirst {\n    /**\n     * @param {Object} options\n     * @param {string} options.cacheName Cache name to store and retrieve\n     * requests. Defaults to cache names provided by\n     * [workbox-core]{@link module:workbox-core.cacheNames}.\n     * @param {Array<Object>} options.plugins [Plugins]{@link https://developers.google.com/web/tools/workbox/guides/using-plugins}\n     * to use in conjunction with this caching strategy.\n     * @param {Object} options.fetchOptions Values passed along to the\n     * [`init`](https://developer.mozilla.org/en-US/docs/Web/API/WindowOrWorkerGlobalScope/fetch#Parameters)\n     * of all fetch() requests made by this strategy.\n     * @param {Object} options.matchOptions [`CacheQueryOptions`](https://w3c.github.io/ServiceWorker/#dictdef-cachequeryoptions)\n     */\n    constructor(options = {}) {\n        this._cacheName = cacheNames.getRuntimeName(options.cacheName);\n        this._plugins = options.plugins || [];\n        this._fetchOptions = options.fetchOptions;\n        this._matchOptions = options.matchOptions;\n    }\n    /**\n     * This method will perform a request strategy and follows an API that\n     * will work with the\n     * [Workbox Router]{@link module:workbox-routing.Router}.\n     *\n     * @param {Object} options\n     * @param {Request|string} options.request A request to run this strategy for.\n     * @param {Event} [options.event] The event that triggered the request.\n     * @return {Promise<Response>}\n     */\n    async handle({ event, request }) {\n        const logs = [];\n        if (typeof request === 'string') {\n            request = new Request(request);\n        }\n        if (process.env.NODE_ENV !== 'production') {\n            assert.isInstance(request, Request, {\n                moduleName: 'workbox-strategies',\n                className: 'CacheFirst',\n                funcName: 'makeRequest',\n                paramName: 'request',\n            });\n        }\n        let response = await cacheWrapper.match({\n            cacheName: this._cacheName,\n            request,\n            event,\n            matchOptions: this._matchOptions,\n            plugins: this._plugins,\n        });\n        let error;\n        if (!response) {\n            if (process.env.NODE_ENV !== 'production') {\n                logs.push(`No response found in the '${this._cacheName}' cache. ` +\n                    `Will respond with a network request.`);\n            }\n            try {\n                response = await this._getFromNetwork(request, event);\n            }\n            catch (err) {\n                error = err;\n            }\n            if (process.env.NODE_ENV !== 'production') {\n                if (response) {\n                    logs.push(`Got response from network.`);\n                }\n                else {\n                    logs.push(`Unable to get a response from the network.`);\n                }\n            }\n        }\n        else {\n            if (process.env.NODE_ENV !== 'production') {\n                logs.push(`Found a cached response in the '${this._cacheName}' cache.`);\n            }\n        }\n        if (process.env.NODE_ENV !== 'production') {\n            logger.groupCollapsed(messages.strategyStart('CacheFirst', request));\n            for (const log of logs) {\n                logger.log(log);\n            }\n            messages.printFinalResponse(response);\n            logger.groupEnd();\n        }\n        if (!response) {\n            throw new WorkboxError('no-response', { url: request.url, error });\n        }\n        return response;\n    }\n    /**\n     * Handles the network and cache part of CacheFirst.\n     *\n     * @param {Request} request\n     * @param {Event} [event]\n     * @return {Promise<Response>}\n     *\n     * @private\n     */\n    async _getFromNetwork(request, event) {\n        const response = await fetchWrapper.fetch({\n            request,\n            event,\n            fetchOptions: this._fetchOptions,\n            plugins: this._plugins,\n        });\n        // Keep the service worker while we put the request to the cache\n        const responseClone = response.clone();\n        const cachePutPromise = cacheWrapper.put({\n            cacheName: this._cacheName,\n            request,\n            response: responseClone,\n            event,\n            plugins: this._plugins,\n        });\n        if (event) {\n            try {\n                event.waitUntil(cachePutPromise);\n            }\n            catch (error) {\n                if (process.env.NODE_ENV !== 'production') {\n                    logger.warn(`Unable to ensure service worker stays alive when ` +\n                        `updating cache for '${getFriendlyURL(request.url)}'.`);\n                }\n            }\n        }\n        return response;\n    }\n}\nexport { CacheFirst };\n","/*\n  Copyright 2018 Google LLC\n\n  Use of this source code is governed by an MIT-style\n  license that can be found in the LICENSE file or at\n  https://opensource.org/licenses/MIT.\n*/\nimport { assert } from 'workbox-core/_private/assert.js';\nimport { cacheNames } from 'workbox-core/_private/cacheNames.js';\nimport { cacheWrapper } from 'workbox-core/_private/cacheWrapper.js';\nimport { fetchWrapper } from 'workbox-core/_private/fetchWrapper.js';\nimport { getFriendlyURL } from 'workbox-core/_private/getFriendlyURL.js';\nimport { logger } from 'workbox-core/_private/logger.js';\nimport { WorkboxError } from 'workbox-core/_private/WorkboxError.js';\nimport { messages } from './utils/messages.js';\nimport { cacheOkAndOpaquePlugin } from './plugins/cacheOkAndOpaquePlugin.js';\nimport './_version.js';\n/**\n * An implementation of a\n * [stale-while-revalidate]{@link https://developers.google.com/web/fundamentals/instant-and-offline/offline-cookbook/#stale-while-revalidate}\n * request strategy.\n *\n * Resources are requested from both the cache and the network in parallel.\n * The strategy will respond with the cached version if available, otherwise\n * wait for the network response. The cache is updated with the network response\n * with each successful request.\n *\n * By default, this strategy will cache responses with a 200 status code as\n * well as [opaque responses]{@link https://developers.google.com/web/tools/workbox/guides/handle-third-party-requests}.\n * Opaque responses are cross-origin requests where the response doesn't\n * support [CORS]{@link https://enable-cors.org/}.\n *\n * If the network request fails, and there is no cache match, this will throw\n * a `WorkboxError` exception.\n *\n * @memberof module:workbox-strategies\n */\nclass StaleWhileRevalidate {\n    /**\n     * @param {Object} options\n     * @param {string} options.cacheName Cache name to store and retrieve\n     * requests. Defaults to cache names provided by\n     * [workbox-core]{@link module:workbox-core.cacheNames}.\n     * @param {Array<Object>} options.plugins [Plugins]{@link https://developers.google.com/web/tools/workbox/guides/using-plugins}\n     * to use in conjunction with this caching strategy.\n     * @param {Object} options.fetchOptions Values passed along to the\n     * [`init`](https://developer.mozilla.org/en-US/docs/Web/API/WindowOrWorkerGlobalScope/fetch#Parameters)\n     * of all fetch() requests made by this strategy.\n     * @param {Object} options.matchOptions [`CacheQueryOptions`](https://w3c.github.io/ServiceWorker/#dictdef-cachequeryoptions)\n     */\n    constructor(options = {}) {\n        this._cacheName = cacheNames.getRuntimeName(options.cacheName);\n        this._plugins = options.plugins || [];\n        if (options.plugins) {\n            const isUsingCacheWillUpdate = options.plugins.some((plugin) => !!plugin.cacheWillUpdate);\n            this._plugins = isUsingCacheWillUpdate ?\n                options.plugins : [cacheOkAndOpaquePlugin, ...options.plugins];\n        }\n        else {\n            // No plugins passed in, use the default plugin.\n            this._plugins = [cacheOkAndOpaquePlugin];\n        }\n        this._fetchOptions = options.fetchOptions;\n        this._matchOptions = options.matchOptions;\n    }\n    /**\n     * This method will perform a request strategy and follows an API that\n     * will work with the\n     * [Workbox Router]{@link module:workbox-routing.Router}.\n     *\n     * @param {Object} options\n     * @param {Request|string} options.request A request to run this strategy for.\n     * @param {Event} [options.event] The event that triggered the request.\n     * @return {Promise<Response>}\n     */\n    async handle({ event, request }) {\n        const logs = [];\n        if (typeof request === 'string') {\n            request = new Request(request);\n        }\n        if (process.env.NODE_ENV !== 'production') {\n            assert.isInstance(request, Request, {\n                moduleName: 'workbox-strategies',\n                className: 'StaleWhileRevalidate',\n                funcName: 'handle',\n                paramName: 'request',\n            });\n        }\n        const fetchAndCachePromise = this._getFromNetwork({ request, event });\n        let response = await cacheWrapper.match({\n            cacheName: this._cacheName,\n            request,\n            event,\n            matchOptions: this._matchOptions,\n            plugins: this._plugins,\n        });\n        let error;\n        if (response) {\n            if (process.env.NODE_ENV !== 'production') {\n                logs.push(`Found a cached response in the '${this._cacheName}'` +\n                    ` cache. Will update with the network response in the background.`);\n            }\n            if (event) {\n                try {\n                    event.waitUntil(fetchAndCachePromise);\n                }\n                catch (error) {\n                    if (process.env.NODE_ENV !== 'production') {\n                        logger.warn(`Unable to ensure service worker stays alive when ` +\n                            `updating cache for '${getFriendlyURL(request.url)}'.`);\n                    }\n                }\n            }\n        }\n        else {\n            if (process.env.NODE_ENV !== 'production') {\n                logs.push(`No response found in the '${this._cacheName}' cache. ` +\n                    `Will wait for the network response.`);\n            }\n            try {\n                response = await fetchAndCachePromise;\n            }\n            catch (err) {\n                error = err;\n            }\n        }\n        if (process.env.NODE_ENV !== 'production') {\n            logger.groupCollapsed(messages.strategyStart('StaleWhileRevalidate', request));\n            for (const log of logs) {\n                logger.log(log);\n            }\n            messages.printFinalResponse(response);\n            logger.groupEnd();\n        }\n        if (!response) {\n            throw new WorkboxError('no-response', { url: request.url, error });\n        }\n        return response;\n    }\n    /**\n     * @param {Object} options\n     * @param {Request} options.request\n     * @param {Event} [options.event]\n     * @return {Promise<Response>}\n     *\n     * @private\n     */\n    async _getFromNetwork({ request, event }) {\n        const response = await fetchWrapper.fetch({\n            request,\n            event,\n            fetchOptions: this._fetchOptions,\n            plugins: this._plugins,\n        });\n        const cachePutPromise = cacheWrapper.put({\n            cacheName: this._cacheName,\n            request,\n            response: response.clone(),\n            event,\n            plugins: this._plugins,\n        });\n        if (event) {\n            try {\n                event.waitUntil(cachePutPromise);\n            }\n            catch (error) {\n                if (process.env.NODE_ENV !== 'production') {\n                    logger.warn(`Unable to ensure service worker stays alive when ` +\n                        `updating cache for '${getFriendlyURL(request.url)}'.`);\n                }\n            }\n        }\n        return response;\n    }\n}\nexport { StaleWhileRevalidate };\n","/*\n  Copyright 2019 Google LLC\n\n  Use of this source code is governed by an MIT-style\n  license that can be found in the LICENSE file or at\n  https://opensource.org/licenses/MIT.\n*/\nimport './_version.js';\n/**\n * Force a service worker to activate immediately, instead of\n * [waiting](https://developers.google.com/web/fundamentals/primers/service-workers/lifecycle#waiting)\n * for existing clients to close.\n *\n * @memberof module:workbox-core\n */\nfunction skipWaiting() {\n    // We need to explicitly call `self.skipWaiting()` here because we're\n    // shadowing `skipWaiting` with this local function.\n    self.addEventListener('install', () => self.skipWaiting());\n}\nexport { skipWaiting };\n","/*\n  Copyright 2019 Google LLC\n\n  Use of this source code is governed by an MIT-style\n  license that can be found in the LICENSE file or at\n  https://opensource.org/licenses/MIT.\n*/\nimport './_version.js';\n/**\n * Claim any currently available clients once the service worker\n * becomes active. This is normally used in conjunction with `skipWaiting()`.\n *\n * @memberof module:workbox-core\n */\nfunction clientsClaim() {\n    self.addEventListener('activate', () => self.clients.claim());\n}\nexport { clientsClaim };\n"],"names":["self","_","e","logger","__WB_DISABLE_DEV_LOGS","inGroup","methodToColorMap","debug","log","warn","error","groupCollapsed","groupEnd","print","method","args","test","navigator","userAgent","console","styles","logPrefix","join","api","loggerMethods","Object","keys","key","messages","invalid-value","paramName","validValueDescription","value","Error","JSON","stringify","not-an-array","moduleName","className","funcName","incorrect-type","expectedType","incorrect-class","expectedClass","isReturnValueProblem","name","missing-a-method","expectedMethod","add-to-cache-list-unexpected-type","entry","add-to-cache-list-conflicting-entries","firstEntry","secondEntry","_entryId","plugin-error-request-will-fetch","thrownError","message","invalid-cache-name","cacheNameId","unregister-route-but-not-found-with-method","unregister-route-route-not-registered","queue-replay-failed","duplicate-queue-name","expired-test-without-max-age","methodName","unsupported-route-type","not-array-of-class","max-entries-or-age-required","statuses-or-headers-required","invalid-string","channel-name-required","invalid-responses-are-same-args","expire-custom-caches-only","unit-must-be-bytes","normalizedRangeHeader","single-range-only","invalid-range-values","no-range-header","range-not-satisfiable","size","start","end","attempt-to-cache-non-get-request","url","cache-put-with-no-response","no-response","bad-precaching-response","status","non-precached-url","add-to-cache-list-conflicting-integrities","missing-precache-entry","cacheName","generatorFunction","code","details","messageGenerator","WorkboxError","constructor","errorCode","isArray","Array","hasMethod","object","type","isType","isInstance","isOneOf","validValues","includes","isArrayOfClass","item","finalAssertExports","defaultMethod","validMethods","normalizeHandler","handler","assert","handle","Route","match","RegExpRoute","regExp","RegExp","result","exec","href","origin","location","index","slice","getFriendlyURL","urlObj","URL","String","replace","Router","_routes","Map","routes","addFetchListener","addEventListener","event","request","responsePromise","handleRequest","respondWith","addCacheListener","data","payload","urlsToCache","requestPromises","Promise","all","map","Request","waitUntil","ports","then","postMessage","protocol","startsWith","params","route","findMatchingRoute","debugMessages","push","_defaultHandler","forEach","msg","err","reject","_catchHandler","catch","get","matchResult","length","undefined","setDefaultHandler","setCatchHandler","registerRoute","has","set","unregisterRoute","routeIndex","indexOf","splice","defaultRouter","getOrCreateDefaultRouter","capture","captureUrl","valueToCheck","pathname","wildcards","matchCallback","_cacheNameDetails","googleAnalytics","precache","prefix","runtime","suffix","registration","scope","_createCacheName","filter","eachCacheNameDetail","fn","cacheNames","updateDetails","getGoogleAnalyticsName","userCacheName","getPrecacheName","getPrefix","getRuntimeName","getSuffix","dontWaitFor","promise","quotaErrorCallbacks","Set","registerQuotaErrorCallback","callback","add","DBWrapper","version","onupgradeneeded","onversionchange","_db","_name","_version","_onupgradeneeded","_onversionchange","close","db","open","resolve","openRequestTimedOut","setTimeout","OPEN_TIMEOUT","openRequest","indexedDB","onerror","evt","transaction","abort","onsuccess","bind","getKey","storeName","query","getAllKeys","getAll","count","getAllMatching","entries","includeKeys","direction","txn","done","store","objectStore","target","results","openCursor","cursor","continue","storeNames","onabort","oncomplete","_call","objStore","apply","prototype","methodsToWrap","readonly","readwrite","mode","methods","IDBObjectStore","deleteDatabase","onblocked","DB_NAME","OBJECT_STORE_NAME","normalizeURL","unNormalizedUrl","hash","CacheTimestampsModel","_cacheName","_handleUpgrade","createObjectStore","keyPath","createIndex","unique","setTimestamp","timestamp","id","_getId","put","getTimestamp","expireEntries","minTimestamp","maxCount","entriesToDelete","entriesNotDeletedCount","urlsDeleted","delete","CacheExpiration","config","_isRunning","_rerunRequested","maxEntries","maxAgeSeconds","_maxEntries","_maxAgeSeconds","_timestampModel","Date","now","urlsExpired","cache","caches","updateTimestamp","isURLExpired","expireOlderThan","Infinity","ExpirationPlugin","cachedResponseWillBeUsed","cachedResponse","isFresh","_isResponseDateFresh","cacheExpiration","_getCacheExpiration","updateTimestampDone","cacheDidUpdate","_config","_cacheExpirations","purgeOnQuotaError","deleteCacheAndMetadata","dateHeaderTimestamp","_getDateHeaderTimestamp","headers","dateHeader","parsedDate","headerTime","getTime","isNaN","executeQuotaErrorCallbacks","pluginUtils","plugins","callbackName","plugin","_getEffectiveRequest","cacheKeyWillBeUsedPlugins","effectiveRequest","call","_isResponseSafeToCache","response","responseToCache","pluginsUsed","pluginMethod","Response","matchWrapper","matchOptions","putWrapper","updatePlugins","oldResponse","newResponse","cacheWrapper","wrappedFetch","fetchOptions","FetchEvent","preloadResponse","possiblePreloadResponse","failedFetchPlugins","originalRequest","clone","requestClone","pluginFilteredRequest","fetchResponse","fetch","fetchWrapper","strategyStart","strategyName","printFinalResponse","cacheOkAndOpaquePlugin","cacheWillUpdate","NetworkFirst","options","isUsingCacheWillUpdate","some","_plugins","_networkTimeoutSeconds","networkTimeoutSeconds","_fetchOptions","_matchOptions","logs","promises","timeoutId","_getTimeoutPromise","networkPromise","_getNetworkPromise","race","timeoutPromise","onNetworkTimeout","_respondFromCache","clearTimeout","responseClone","cachePut","CacheFirst","_getFromNetwork","cachePutPromise","StaleWhileRevalidate","fetchAndCachePromise","skipWaiting","clientsClaim","clients","claim"],"mappings":"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"}